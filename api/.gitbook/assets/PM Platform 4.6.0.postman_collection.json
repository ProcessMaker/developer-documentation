{
	"info": {
		"_postman_id": "e38f095d-35a1-4197-9e1b-97913f732386",
		"name": "PM Platform 4.6.0",
		"description": "Contact Support:\n Email: info@processmaker.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17606526",
		"_collection_link": "https://bold-eclipse-307017.postman.co/workspace/ProcessMaker~e4aaf764-be39-4780-9996-5bae24fd60c6/collection/17606526-e38f095d-35a1-4197-9e1b-97913f732386?action=share&creator=17606526&source=collection_link"
	},
	"item": [
		{
			"name": "version_histories",
			"item": [
				{
					"name": "{version_history_id}",
					"item": [
						{
							"name": "Get single Version History by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/version_histories/:version_history_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version_histories",
										":version_history_id"
									],
									"variable": [
										{
											"key": "version_history_id",
											"value": "<string>"
										}
									]
								},
								"description": "Get a single Version History."
							},
							"response": [
								{
									"name": "Successfully found the Version History",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/version_histories/:version_history_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"version_histories",
												":version_history_id"
											],
											"variable": [
												{
													"key": "version_history_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"versionable_id\": \"<integer>\",\n  \"versionable_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update a Version History",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"versionable_id\": \"<integer>\",\n  \"versionable_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/version_histories/:version_history_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version_histories",
										":version_history_id"
									],
									"variable": [
										{
											"key": "version_history_id",
											"value": "<string>"
										}
									]
								},
								"description": "Update a Version History."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"versionable_id\": \"<integer>\",\n  \"versionable_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/version_histories/:version_history_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"version_histories",
												":version_history_id"
											],
											"variable": [
												{
													"key": "version_history_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"versionable_id\": \"<integer>\",\n  \"versionable_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Delete a Version History",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/version_histories/:version_history_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version_histories",
										":version_history_id"
									],
									"variable": [
										{
											"key": "version_history_id",
											"value": "<string>"
										}
									]
								},
								"description": "Delete a Version History."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/version_histories/:version_history_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"version_histories",
												":version_history_id"
											],
											"variable": [
												{
													"key": "version_history_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"versionable_id\": \"<integer>\",\n  \"versionable_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "clone",
					"item": [
						{
							"name": "Clone a new Version History",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"versionable_id\": \"<integer>\",\n  \"versionable_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/version_histories/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version_histories",
										"clone"
									]
								},
								"description": "Clone a new Version History."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"versionable_id\": \"<integer>\",\n  \"versionable_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/version_histories/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"version_histories",
												"clone"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"versionable_id\": \"<integer>\",\n  \"versionable_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Return all version History according to the model",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/version_histories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version_histories"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Get the list of records of Version History"
					},
					"response": [
						{
							"name": "list of Version History",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/version_histories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version_histories"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"versionable_id\": \"<integer>\",\n      \"versionable_type\": \"<string>\",\n      \"name\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"description\": \"<string>\",\n      \"status\": \"INACTIVE\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"versionable_id\": \"<integer>\",\n      \"versionable_type\": \"<string>\",\n      \"name\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"description\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new Version History",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"versionable_id\": \"<integer>\",\n  \"versionable_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/version_histories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version_histories"
							]
						},
						"description": "Create a new Version History."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"versionable_id\": \"<integer>\",\n  \"versionable_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/version_histories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version_histories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"versionable_id\": \"<integer>\",\n  \"versionable_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "{user_id}",
					"item": [
						{
							"name": "tokens",
							"item": [
								{
									"name": "{token_id}",
									"item": [
										{
											"name": "Get single token by ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/tokens/:token_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"tokens",
														":token_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>"
														},
														{
															"key": "token_id",
															"value": "<string>"
														}
													]
												},
												"description": "Show a personal access token for the user"
											},
											"response": [
												{
													"name": "Successfully found the token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/tokens/:token_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"tokens",
																":token_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "token_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"client_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"scopes\": {},\n  \"revoked\": \"<boolean>\",\n  \"client\": {\n    \"id\": \"<integer>\",\n    \"user_id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"provider\": \"<string>\",\n    \"redirect\": \"<string>\",\n    \"personal_access_client\": \"<boolean>\",\n    \"password_client\": \"<boolean>\",\n    \"revoked\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"expires_at\": \"<dateTime>\"\n}"
												}
											]
										},
										{
											"name": "Delete a token",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/tokens/:token_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"tokens",
														":token_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>"
														},
														{
															"key": "token_id",
															"value": "<string>"
														}
													]
												},
												"description": "Delete the given token for a user"
											},
											"response": [
												{
													"name": "success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/tokens/:token_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"tokens",
																":token_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "token_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Display listing of access tokens for the specified user.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/tokens?per_page=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"tokens"
											],
											"query": [
												{
													"key": "per_page",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Display listing of access tokens for the specified user."
									},
									"response": [
										{
											"name": "List of tokens.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/tokens?per_page=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"tokens"
													],
													"query": [
														{
															"key": "per_page",
															"value": "10"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"user_id\": \"<integer>\",\n      \"client_id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"scopes\": {},\n      \"revoked\": \"<boolean>\",\n      \"client\": {\n        \"id\": \"<integer>\",\n        \"user_id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"provider\": \"<string>\",\n        \"redirect\": \"<string>\",\n        \"personal_access_client\": \"<boolean>\",\n        \"password_client\": \"<boolean>\",\n        \"revoked\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"expires_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"user_id\": \"<integer>\",\n      \"client_id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"scopes\": {},\n      \"revoked\": \"<boolean>\",\n      \"client\": {\n        \"id\": \"<integer>\",\n        \"user_id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"provider\": \"<string>\",\n        \"redirect\": \"<string>\",\n        \"personal_access_client\": \"<boolean>\",\n        \"password_client\": \"<boolean>\",\n        \"revoked\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"expires_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Create new token for a specific user",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"tokens"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Create a new personal access token for the user."
									},
									"response": [
										{
											"name": "New token instance",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/tokens",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"tokens"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"client_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"scopes\": {},\n  \"revoked\": \"<boolean>\",\n  \"client\": {\n    \"id\": \"<integer>\",\n    \"user_id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"provider\": \"<string>\",\n    \"redirect\": \"<string>\",\n    \"personal_access_client\": \"<boolean>\",\n    \"password_client\": \"<boolean>\",\n    \"revoked\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"expires_at\": \"<dateTime>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "groups",
							"item": [
								{
									"name": "Set the groups a users belongs to",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groups\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"groups"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Update a user's groups"
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groups\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"groups"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get single user by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Display the specified resource."
							},
							"response": [
								{
									"name": "Successfully found the process",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"<email>\",\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"postal\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"cell\": \"<string>\",\n  \"title\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"datetime_format\": \"<string>\",\n  \"language\": \"<string>\",\n  \"is_administrator\": \"<boolean>\",\n  \"expires_at\": \"<string>\",\n  \"loggedin_at\": \"<string>\",\n  \"remember_token\": \"<string>\",\n  \"status\": \"OUT_OF_OFFICE\",\n  \"fullname\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"media\": [\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"birthdate\": \"<date>\",\n  \"delegation_user_id\": \"<string>\",\n  \"manager_id\": \"<string>\",\n  \"meta\": {\n    \"ipsum5f\": -26214474.464176536\n  },\n  \"force_change_password\": \"<boolean>\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"deleted_at\": \"<dateTime>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a user",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"postal\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"cell\": \"<string>\",\n  \"title\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"datetime_format\": \"<string>\",\n  \"language\": \"<string>\",\n  \"is_administrator\": \"<boolean>\",\n  \"expires_at\": \"<string>\",\n  \"loggedin_at\": \"<string>\",\n  \"remember_token\": \"<string>\",\n  \"status\": \"SCHEDULED\",\n  \"fullname\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"media\": [\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"birthdate\": \"<date>\",\n  \"delegation_user_id\": \"<string>\",\n  \"manager_id\": \"<string>\",\n  \"meta\": {\n    \"sunt_ef\": -79356915,\n    \"velit_d7\": \"sit\",\n    \"nostrud_e\": false\n  },\n  \"force_change_password\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update a user"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"postal\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"cell\": \"<string>\",\n  \"title\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"datetime_format\": \"<string>\",\n  \"language\": \"<string>\",\n  \"is_administrator\": \"<boolean>\",\n  \"expires_at\": \"<string>\",\n  \"loggedin_at\": \"<string>\",\n  \"remember_token\": \"<string>\",\n  \"status\": \"SCHEDULED\",\n  \"fullname\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"media\": [\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"birthdate\": \"<date>\",\n  \"delegation_user_id\": \"<string>\",\n  \"manager_id\": \"<string>\",\n  \"meta\": {\n    \"sunt_ef\": -79356915,\n    \"velit_d7\": \"sit\",\n    \"nostrud_e\": false\n  },\n  \"force_change_password\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"postal\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"cell\": \"<string>\",\n  \"title\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"datetime_format\": \"<string>\",\n  \"language\": \"<string>\",\n  \"is_administrator\": \"<boolean>\",\n  \"expires_at\": \"<string>\",\n  \"loggedin_at\": \"<string>\",\n  \"remember_token\": \"<string>\",\n  \"status\": \"SCHEDULED\",\n  \"fullname\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"media\": [\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"birthdate\": \"<date>\",\n  \"delegation_user_id\": \"<string>\",\n  \"manager_id\": \"<string>\",\n  \"meta\": {\n    \"sunt_ef\": -79356915,\n    \"velit_d7\": \"sit\",\n    \"nostrud_e\": false\n  },\n  \"force_change_password\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"postal\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"cell\": \"<string>\",\n  \"title\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"datetime_format\": \"<string>\",\n  \"language\": \"<string>\",\n  \"is_administrator\": \"<boolean>\",\n  \"expires_at\": \"<string>\",\n  \"loggedin_at\": \"<string>\",\n  \"remember_token\": \"<string>\",\n  \"status\": \"SCHEDULED\",\n  \"fullname\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"media\": [\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"birthdate\": \"<date>\",\n  \"delegation_user_id\": \"<string>\",\n  \"manager_id\": \"<string>\",\n  \"meta\": {\n    \"sunt_ef\": -79356915,\n    \"velit_d7\": \"sit\",\n    \"nostrud_e\": false\n  },\n  \"force_change_password\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "Delete a user",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Delete a user"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "restore",
					"item": [
						{
							"name": "Restore a soft deleted user",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/restore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"restore"
									]
								},
								"description": "Reverses the soft delete of a user"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"restore"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns all users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users?status=ACTIVE&filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=&exclude_ids=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "status",
									"value": "ACTIVE",
									"description": "ACTIVE or INACTIVE"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches First Name, Last Name, Email and Username."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								},
								{
									"key": "exclude_ids",
									"value": "",
									"description": "Comma separated list of IDs to exclude from the response"
								}
							]
						},
						"description": "Display a listing of the resource."
					},
					"response": [
						{
							"name": "list of users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?status=ACTIVE&filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=&exclude_ids=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "status",
											"value": "ACTIVE",
											"description": "ACTIVE or INACTIVE"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches First Name, Last Name, Email and Username."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										},
										{
											"key": "exclude_ids",
											"value": "",
											"description": "Comma separated list of IDs to exclude from the response"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"email\": \"<email>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"username\": \"<string>\",\n      \"password\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"postal\": \"<string>\",\n      \"country\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"fax\": \"<string>\",\n      \"cell\": \"<string>\",\n      \"title\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"datetime_format\": \"<string>\",\n      \"language\": \"<string>\",\n      \"is_administrator\": \"<boolean>\",\n      \"expires_at\": \"<string>\",\n      \"loggedin_at\": \"<string>\",\n      \"remember_token\": \"<string>\",\n      \"status\": \"SCHEDULED\",\n      \"fullname\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"media\": [\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        }\n      ],\n      \"birthdate\": \"<date>\",\n      \"delegation_user_id\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"meta\": {\n        \"anim_e\": \"qui amet ex quis in\",\n        \"ut_9a\": -30312988.00221096,\n        \"do_c\": true\n      },\n      \"force_change_password\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"username\": \"<string>\",\n      \"password\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"postal\": \"<string>\",\n      \"country\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"fax\": \"<string>\",\n      \"cell\": \"<string>\",\n      \"title\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"datetime_format\": \"<string>\",\n      \"language\": \"<string>\",\n      \"is_administrator\": \"<boolean>\",\n      \"expires_at\": \"<string>\",\n      \"loggedin_at\": \"<string>\",\n      \"remember_token\": \"<string>\",\n      \"status\": \"OUT_OF_OFFICE\",\n      \"fullname\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"media\": [\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        }\n      ],\n      \"birthdate\": \"<date>\",\n      \"delegation_user_id\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"meta\": {\n        \"adipisicing_319\": 78923715\n      },\n      \"force_change_password\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\",\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"postal\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"cell\": \"<string>\",\n  \"title\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"datetime_format\": \"<string>\",\n  \"language\": \"<string>\",\n  \"is_administrator\": \"<boolean>\",\n  \"expires_at\": \"<string>\",\n  \"loggedin_at\": \"<string>\",\n  \"remember_token\": \"<string>\",\n  \"status\": \"SCHEDULED\",\n  \"fullname\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"media\": [\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"birthdate\": \"<date>\",\n  \"delegation_user_id\": \"<string>\",\n  \"manager_id\": \"<string>\",\n  \"meta\": {\n    \"sunt_ef\": -79356915,\n    \"velit_d7\": \"sit\",\n    \"nostrud_e\": false\n  },\n  \"force_change_password\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Store a newly created resource in storage."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"postal\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"cell\": \"<string>\",\n  \"title\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"datetime_format\": \"<string>\",\n  \"language\": \"<string>\",\n  \"is_administrator\": \"<boolean>\",\n  \"expires_at\": \"<string>\",\n  \"loggedin_at\": \"<string>\",\n  \"remember_token\": \"<string>\",\n  \"status\": \"SCHEDULED\",\n  \"fullname\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"media\": [\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"birthdate\": \"<date>\",\n  \"delegation_user_id\": \"<string>\",\n  \"manager_id\": \"<string>\",\n  \"meta\": {\n    \"sunt_ef\": -79356915,\n    \"velit_d7\": \"sit\",\n    \"nostrud_e\": false\n  },\n  \"force_change_password\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"email\": \"<email>\",\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"postal\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"cell\": \"<string>\",\n  \"title\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"datetime_format\": \"<string>\",\n  \"language\": \"<string>\",\n  \"is_administrator\": \"<boolean>\",\n  \"expires_at\": \"<string>\",\n  \"loggedin_at\": \"<string>\",\n  \"remember_token\": \"<string>\",\n  \"status\": \"OUT_OF_OFFICE\",\n  \"fullname\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"media\": [\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"birthdate\": \"<date>\",\n  \"delegation_user_id\": \"<string>\",\n  \"manager_id\": \"<string>\",\n  \"meta\": {\n    \"ipsum5f\": -26214474.464176536\n  },\n  \"force_change_password\": \"<boolean>\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"deleted_at\": \"<dateTime>\"\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"postal\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"cell\": \"<string>\",\n  \"title\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"datetime_format\": \"<string>\",\n  \"language\": \"<string>\",\n  \"is_administrator\": \"<boolean>\",\n  \"expires_at\": \"<string>\",\n  \"loggedin_at\": \"<string>\",\n  \"remember_token\": \"<string>\",\n  \"status\": \"SCHEDULED\",\n  \"fullname\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"media\": [\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"birthdate\": \"<date>\",\n  \"delegation_user_id\": \"<string>\",\n  \"manager_id\": \"<string>\",\n  \"meta\": {\n    \"sunt_ef\": -79356915,\n    \"velit_d7\": \"sit\",\n    \"nostrud_e\": false\n  },\n  \"force_change_password\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "user_members_available",
			"item": [
				{
					"name": "Returns all users available for a given group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user_members_available?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user_members_available"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name. Can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							],
							"variable": [
								{
									"key": "group_id",
									"value": "<string>",
									"description": "(Required) ID of group to return"
								}
							]
						},
						"description": "Display a listing of users available"
					},
					"response": [
						{
							"name": "list of users available to be assigned as member",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user_members_available?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user_members_available"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name. Can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"email\": \"<email>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"username\": \"<string>\",\n      \"password\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"postal\": \"<string>\",\n      \"country\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"fax\": \"<string>\",\n      \"cell\": \"<string>\",\n      \"title\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"datetime_format\": \"<string>\",\n      \"language\": \"<string>\",\n      \"is_administrator\": \"<boolean>\",\n      \"expires_at\": \"<string>\",\n      \"loggedin_at\": \"<string>\",\n      \"remember_token\": \"<string>\",\n      \"status\": \"SCHEDULED\",\n      \"fullname\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"media\": [\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        }\n      ],\n      \"birthdate\": \"<date>\",\n      \"delegation_user_id\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"meta\": {\n        \"anim_e\": \"qui amet ex quis in\",\n        \"ut_9a\": -30312988.00221096,\n        \"do_c\": true\n      },\n      \"force_change_password\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"username\": \"<string>\",\n      \"password\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"postal\": \"<string>\",\n      \"country\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"fax\": \"<string>\",\n      \"cell\": \"<string>\",\n      \"title\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"datetime_format\": \"<string>\",\n      \"language\": \"<string>\",\n      \"is_administrator\": \"<boolean>\",\n      \"expires_at\": \"<string>\",\n      \"loggedin_at\": \"<string>\",\n      \"remember_token\": \"<string>\",\n      \"status\": \"OUT_OF_OFFICE\",\n      \"fullname\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"media\": [\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        }\n      ],\n      \"birthdate\": \"<date>\",\n      \"delegation_user_id\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"meta\": {\n        \"adipisicing_319\": 78923715\n      },\n      \"force_change_password\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "unread_notifications",
			"item": [
				{
					"name": "Mark notifications as unread by the user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"routes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/unread_notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"unread_notifications"
							]
						},
						"description": "Update notifications as unread"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"routes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/unread_notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"unread_notifications"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "tasks",
			"item": [
				{
					"name": "{task_id}",
					"item": [
						{
							"name": "Get a single task by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/:task_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":task_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "include"
										}
									],
									"variable": [
										{
											"key": "task_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Display the specified resource."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tasks/:task_id?include=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tasks",
												":task_id"
											],
											"query": [
												{
													"key": "include",
													"value": "<string>",
													"description": "include"
												}
											],
											"variable": [
												{
													"key": "task_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"user_id\": \"<string>\",\n  \"status\": \"<string>\",\n  \"due_at\": \"<dateTime>\",\n  \"initiated_at\": \"<dateTime>\",\n  \"riskchanges_at\": \"<dateTime>\",\n  \"subprocess_start_event_id\": \"<string>\",\n  \"data\": {},\n  \"id\": \"<string>\",\n  \"process_id\": \"<string>\",\n  \"process_request_id\": \"<string>\",\n  \"element_id\": \"<string>\",\n  \"element_type\": \"<string>\",\n  \"element_index\": \"<string>\",\n  \"element_name\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"advanceStatus\": \"<string>\",\n  \"due_notified\": \"<integer>\",\n  \"user\": {},\n  \"process\": {},\n  \"process_request\": {}\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tasks/:task_id?include=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tasks",
												":task_id"
											],
											"query": [
												{
													"key": "include",
													"value": "<string>",
													"description": "include"
												}
											],
											"variable": [
												{
													"key": "task_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a task",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"<string>\",\n  \"data\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/:task_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":task_id"
									],
									"variable": [
										{
											"key": "task_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Updates the current element"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"<string>\",\n  \"data\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tasks/:task_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tasks",
												":task_id"
											],
											"variable": [
												{
													"key": "task_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"user_id\": \"<string>\",\n  \"status\": \"<string>\",\n  \"due_at\": \"<dateTime>\",\n  \"initiated_at\": \"<dateTime>\",\n  \"riskchanges_at\": \"<dateTime>\",\n  \"subprocess_start_event_id\": \"<string>\",\n  \"data\": {},\n  \"id\": \"<string>\",\n  \"process_id\": \"<string>\",\n  \"process_request_id\": \"<string>\",\n  \"element_id\": \"<string>\",\n  \"element_type\": \"<string>\",\n  \"element_index\": \"<string>\",\n  \"element_name\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"advanceStatus\": \"<string>\",\n  \"due_notified\": \"<integer>\",\n  \"user\": {},\n  \"process\": {},\n  \"process_request\": {}\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"<string>\",\n  \"data\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tasks/:task_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tasks",
												":task_id"
											],
											"variable": [
												{
													"key": "task_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"<string>\",\n  \"data\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tasks/:task_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tasks",
												":task_id"
											],
											"variable": [
												{
													"key": "task_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns all tasks that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks?process_request_id=<integer>&filter=<string>&order_by=<string>&order_direction=asc&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "process_request_id",
									"value": "<integer>",
									"description": "Process request id"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Display a listing of the resource."
					},
					"response": [
						{
							"name": "list of tasks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks?process_request_id=<integer>&filter=<string>&order_by=<string>&order_direction=asc&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									],
									"query": [
										{
											"key": "process_request_id",
											"value": "<integer>",
											"description": "Process request id"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"initiated_at\": \"<dateTime>\",\n      \"riskchanges_at\": \"<dateTime>\",\n      \"subprocess_start_event_id\": \"<string>\",\n      \"data\": {},\n      \"id\": \"<string>\",\n      \"process_id\": \"<string>\",\n      \"process_request_id\": \"<string>\",\n      \"element_id\": \"<string>\",\n      \"element_type\": \"<string>\",\n      \"element_index\": \"<string>\",\n      \"element_name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"advanceStatus\": \"<string>\",\n      \"due_notified\": \"<integer>\",\n      \"user\": {},\n      \"process\": {},\n      \"process_request\": {}\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"initiated_at\": \"<dateTime>\",\n      \"riskchanges_at\": \"<dateTime>\",\n      \"subprocess_start_event_id\": \"<string>\",\n      \"data\": {},\n      \"id\": \"<string>\",\n      \"process_id\": \"<string>\",\n      \"process_request_id\": \"<string>\",\n      \"element_id\": \"<string>\",\n      \"element_type\": \"<string>\",\n      \"element_index\": \"<string>\",\n      \"element_name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"advanceStatus\": \"<string>\",\n      \"due_notified\": \"<integer>\",\n      \"user\": {},\n      \"process\": {},\n      \"process_request\": {}\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "task_assignments",
			"item": [
				{
					"name": "{task_assignment}",
					"item": [
						{
							"name": "Update a Task Assignment",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"process_id\": \"<integer>\",\n  \"process_task_id\": \"<string>\",\n  \"assignment_id\": \"<integer>\",\n  \"assignment_type\": \"ProcessMaker\\\\Models\\\\Group\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task_assignments/:task_assignment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task_assignments",
										":task_assignment"
									],
									"variable": [
										{
											"key": "task_assignment",
											"value": "<integer>"
										}
									]
								},
								"description": "Update a task assignment"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"process_id\": \"<integer>\",\n  \"process_task_id\": \"<string>\",\n  \"assignment_id\": \"<integer>\",\n  \"assignment_type\": \"ProcessMaker\\\\Models\\\\Group\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task_assignments/:task_assignment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task_assignments",
												":task_assignment"
											],
											"variable": [
												{
													"key": "task_assignment"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"process_id\": \"<integer>\",\n  \"process_task_id\": \"<string>\",\n  \"assignment_id\": \"<integer>\",\n  \"assignment_type\": \"ProcessMaker\\\\Models\\\\Group\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task_assignments/:task_assignment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task_assignments",
												":task_assignment"
											],
											"variable": [
												{
													"key": "task_assignment"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"process_id\": \"<integer>\",\n  \"process_task_id\": \"<string>\",\n  \"assignment_id\": \"<integer>\",\n  \"assignment_type\": \"ProcessMaker\\\\Models\\\\Group\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task_assignments/:task_assignment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task_assignments",
												":task_assignment"
											],
											"variable": [
												{
													"key": "task_assignment"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "Delete a Task Assignment",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"process_id\": \"<integer>\",\n  \"process_task_id\": \"<string>\",\n  \"assignment_id\": \"<integer>\",\n  \"assignment_type\": \"ProcessMaker\\\\Models\\\\Group\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task_assignments/:task_assignment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task_assignments",
										":task_assignment"
									],
									"variable": [
										{
											"key": "task_assignment",
											"value": "<integer>"
										}
									]
								},
								"description": "Remove an assignment"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"process_id\": \"<integer>\",\n  \"process_task_id\": \"<string>\",\n  \"assignment_id\": \"<integer>\",\n  \"assignment_type\": \"ProcessMaker\\\\Models\\\\Group\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task_assignments/:task_assignment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task_assignments",
												":task_assignment"
											],
											"variable": [
												{
													"key": "task_assignment"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns all task assignments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/task_assignments?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"task_assignments"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Display a listing of the resource."
					},
					"response": [
						{
							"name": "list of task assignments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/task_assignments?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task_assignments"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"process_id\": \"<integer>\",\n      \"process_task_id\": \"<string>\",\n      \"assignment_id\": \"<integer>\",\n      \"assignment_type\": \"ProcessMaker\\\\Models\\\\Group\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"process_id\": \"<integer>\",\n      \"process_task_id\": \"<string>\",\n      \"assignment_id\": \"<integer>\",\n      \"assignment_type\": \"ProcessMaker\\\\Models\\\\Group\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {}\n}"
						}
					]
				},
				{
					"name": "Save a new Task Assignment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"process_id\": \"<integer>\",\n  \"process_task_id\": \"<string>\",\n  \"assignment_id\": \"<integer>\",\n  \"assignment_type\": \"ProcessMaker\\\\Models\\\\Group\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/task_assignments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"task_assignments"
							]
						},
						"description": "Store a newly created task assignment in storage."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"process_id\": \"<integer>\",\n  \"process_task_id\": \"<string>\",\n  \"assignment_id\": \"<integer>\",\n  \"assignment_type\": \"ProcessMaker\\\\Models\\\\Group\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task_assignments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task_assignments"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"process_id\": \"<integer>\",\n  \"process_task_id\": \"<string>\",\n  \"assignment_id\": \"<integer>\",\n  \"assignment_type\": \"ProcessMaker\\\\Models\\\\User\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"process_id\": \"<integer>\",\n  \"process_task_id\": \"<string>\",\n  \"assignment_id\": \"<integer>\",\n  \"assignment_type\": \"ProcessMaker\\\\Models\\\\Group\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task_assignments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task_assignments"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "start_processes",
			"item": [
				{
					"name": "Returns the list of processes that the user can start",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/start_processes?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"start_processes"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							],
							"variable": [
								{
									"key": "without_event_definitions",
									"value": "<boolean>",
									"description": "If true return only processes that haven't start event definitions"
								}
							]
						},
						"description": "Returns the list of processes that the user can start."
					},
					"response": [
						{
							"name": "list of processes that the user can start",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/start_processes?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"start_processes"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"process_category_id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"status\": \"INACTIVE\",\n      \"pause_timer_start\": \"<integer>\",\n      \"cancel_screen_id\": \"<integer>\",\n      \"has_timer_start_events\": \"<boolean>\",\n      \"request_detail_screen_id\": \"<integer>\",\n      \"is_valid\": \"<integer>\",\n      \"package_key\": \"<string>\",\n      \"start_events\": [\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"warnings\": \"<string>\",\n      \"self_service_tasks\": {},\n      \"category\": {},\n      \"manager_id\": \"<integer>\",\n      \"user_id\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"deleted_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"notifications\": {},\n      \"task_notifications\": {},\n      \"events\": [\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"process_category_id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"status\": \"INACTIVE\",\n      \"pause_timer_start\": \"<integer>\",\n      \"cancel_screen_id\": \"<integer>\",\n      \"has_timer_start_events\": \"<boolean>\",\n      \"request_detail_screen_id\": \"<integer>\",\n      \"is_valid\": \"<integer>\",\n      \"package_key\": \"<string>\",\n      \"start_events\": [\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"warnings\": \"<string>\",\n      \"self_service_tasks\": {},\n      \"category\": {},\n      \"manager_id\": \"<integer>\",\n      \"user_id\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"deleted_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"notifications\": {},\n      \"task_notifications\": {},\n      \"events\": [\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "signals",
			"item": [
				{
					"name": "{signal_id}",
					"item": [
						{
							"name": "Get a single signal by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/signals/:signal_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signals",
										":signal_id"
									],
									"variable": [
										{
											"key": "signal_id",
											"value": "<string>"
										}
									]
								},
								"description": "Display the specified resource."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/signals/:signal_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"signals",
												":signal_id"
											],
											"variable": [
												{
													"key": "signal_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"type\": \"<string>\",\n  \"processes\": [\n    {\n      \"id\": \"<integer>\",\n      \"is_system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"catches\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"is_system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"catches\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a signal",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"detail\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/signals/:signal_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signals",
										":signal_id"
									],
									"variable": [
										{
											"key": "signal_id",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"detail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/signals/:signal_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"signals",
												":signal_id"
											],
											"variable": [
												{
													"key": "signal_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"type\": \"<string>\",\n  \"processes\": [\n    {\n      \"id\": \"<integer>\",\n      \"is_system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"catches\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"is_system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"catches\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a signal",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/signals/:signal_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signals",
										":signal_id"
									],
									"variable": [
										{
											"key": "signal_id",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/signals/:signal_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"signals",
												":signal_id"
											],
											"variable": [
												{
													"key": "signal_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns all signals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/signals?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"signals"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Display a listing of the resource."
					},
					"response": [
						{
							"name": "list of signals",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/signals?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signals"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"type\": \"<string>\",\n      \"processes\": [\n        {\n          \"id\": \"<integer>\",\n          \"is_system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"catches\": [\n            {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"id\": \"<integer>\",\n          \"is_system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"catches\": [\n            {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"type\": \"<string>\",\n      \"processes\": [\n        {\n          \"id\": \"<integer>\",\n          \"is_system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"catches\": [\n            {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"id\": \"<integer>\",\n          \"is_system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"catches\": [\n            {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {}\n}"
						}
					]
				},
				{
					"name": "Creates a new Global Signal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"detail\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/signals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"signals"
							]
						},
						"description": "Creates a new global signal"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"detail\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/signals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signals"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"type\": \"<string>\",\n  \"processes\": [\n    {\n      \"id\": \"<integer>\",\n      \"is_system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"catches\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"is_system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"catches\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "{setting_id}",
					"item": [
						{
							"name": "Update a setting",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"helper\": \"<string>\",\n  \"group\": \"<string>\",\n  \"format\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"readonly\": \"<boolean>\",\n  \"variables\": \"<string>\",\n  \"sansSerifFont\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/settings/:setting_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										":setting_id"
									],
									"variable": [
										{
											"key": "setting_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update a setting"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"helper\": \"<string>\",\n  \"group\": \"<string>\",\n  \"format\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"readonly\": \"<boolean>\",\n  \"variables\": \"<string>\",\n  \"sansSerifFont\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/:setting_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												":setting_id"
											],
											"variable": [
												{
													"key": "setting_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"helper\": \"<string>\",\n  \"group\": \"<string>\",\n  \"format\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"readonly\": \"<boolean>\",\n  \"variables\": \"<string>\",\n  \"sansSerifFont\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/:setting_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												":setting_id"
											],
											"variable": [
												{
													"key": "setting_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"helper\": \"<string>\",\n  \"group\": \"<string>\",\n  \"format\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"readonly\": \"<boolean>\",\n  \"variables\": \"<string>\",\n  \"sansSerifFont\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/:setting_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												":setting_id"
											],
											"variable": [
												{
													"key": "setting_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns all settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/settings?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"settings"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Display a listing of the resource."
					},
					"response": [
						{
							"name": "list of settings",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settings?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"helper\": \"<string>\",\n      \"group\": \"<string>\",\n      \"format\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"readonly\": \"<boolean>\",\n      \"variables\": \"<string>\",\n      \"sansSerifFont\": \"<string>\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"helper\": \"<string>\",\n      \"group\": \"<string>\",\n      \"format\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"readonly\": \"<boolean>\",\n      \"variables\": \"<string>\",\n      \"sansSerifFont\": \"<string>\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "security-logs",
			"item": [
				{
					"name": "{securityLog}",
					"item": [
						{
							"name": "Get single security log by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/security-logs/:securityLog",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security-logs",
										":securityLog"
									],
									"variable": [
										{
											"key": "securityLog",
											"value": "<string>"
										}
									]
								},
								"description": "Display the specified resource."
							},
							"response": [
								{
									"name": "Successfully found the security log",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/security-logs/:securityLog",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"security-logs",
												":securityLog"
											],
											"variable": [
												{
													"key": "securityLog"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"event\": \"<string>\",\n      \"ip\": \"<string>\",\n      \"meta\": [\n        {\n          \"os\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"browser\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"user_agent\": \"<string>\"\n        },\n        {\n          \"os\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"browser\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"user_agent\": \"<string>\"\n        }\n      ],\n      \"user_id\": \"<integer>\",\n      \"occured_at\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"event\": \"<string>\",\n      \"ip\": \"<string>\",\n      \"meta\": [\n        {\n          \"os\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"browser\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"user_agent\": \"<string>\"\n        },\n        {\n          \"os\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"browser\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"user_agent\": \"<string>\"\n        }\n      ],\n      \"user_id\": \"<integer>\",\n      \"occured_at\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns all security logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/security-logs?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"security-logs"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Get a list of Security Logs."
					},
					"response": [
						{
							"name": "list of security logs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/security-logs?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security-logs"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"event\": \"<string>\",\n      \"ip\": \"<string>\",\n      \"meta\": [\n        {\n          \"os\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"browser\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"user_agent\": \"<string>\"\n        },\n        {\n          \"os\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"browser\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"user_agent\": \"<string>\"\n        }\n      ],\n      \"user_id\": \"<integer>\",\n      \"occured_at\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"event\": \"<string>\",\n      \"ip\": \"<string>\",\n      \"meta\": [\n        {\n          \"os\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"browser\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"user_agent\": \"<string>\"\n        },\n        {\n          \"os\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"browser\": [\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"version\": \"<string>\"\n            }\n          ],\n          \"user_agent\": \"<string>\"\n        }\n      ],\n      \"user_id\": \"<integer>\",\n      \"occured_at\": \"<string>\"\n    }\n  ],\n  \"meta\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "scripts",
			"item": [
				{
					"name": "{scripts_id}",
					"item": [
						{
							"name": "duplicate",
							"item": [
								{
									"name": "duplicate a script",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"code\": \"<string>\",\n  \"timeout\": \"<integer>\",\n  \"run_as_user_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"script_category_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scripts/:scripts_id/duplicate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":scripts_id",
												"duplicate"
											],
											"variable": [
												{
													"key": "scripts_id",
													"value": "<string>"
												}
											]
										},
										"description": "Duplicate a Script."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"code\": \"<string>\",\n  \"timeout\": \"<integer>\",\n  \"run_as_user_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"script_category_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scripts/:scripts_id/duplicate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":scripts_id",
														"duplicate"
													],
													"variable": [
														{
															"key": "scripts_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"code\": \"<string>\",\n  \"timeout\": \"<integer>\",\n  \"run_as_user_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"script_category_id\": \"<integer>\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{script_id}",
					"item": [
						{
							"name": "preview",
							"item": [
								{
									"name": "Test script code without saving it",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"<string>\",\n  \"nonce\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_id/preview",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_id",
												"preview"
											],
											"variable": [
												{
													"key": "script_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Previews executing a script, with sample data/config data"
									},
									"response": [
										{
											"name": "success if the script was queued",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"<string>\",\n  \"nonce\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_id/preview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_id",
														"preview"
													],
													"variable": [
														{
															"key": "script_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "draft",
							"item": [
								{
									"name": "Update a draft script",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"code\": \"<string>\",\n  \"timeout\": \"<integer>\",\n  \"run_as_user_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"script_category_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_id/draft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_id",
												"draft"
											],
											"variable": [
												{
													"key": "script_id",
													"value": "<string>"
												}
											]
										},
										"description": "Update a draft script."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"code\": \"<string>\",\n  \"timeout\": \"<integer>\",\n  \"run_as_user_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"script_category_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_id",
														"draft"
													],
													"variable": [
														{
															"key": "script_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get single script by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scripts/:script_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts",
										":script_id"
									],
									"variable": [
										{
											"key": "script_id",
											"value": "<string>"
										}
									]
								},
								"description": "Get a single script in a process."
							},
							"response": [
								{
									"name": "Successfully found the script",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_id"
											],
											"variable": [
												{
													"key": "script_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"code\": \"<string>\",\n  \"timeout\": \"<integer>\",\n  \"run_as_user_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"script_category_id\": \"<integer>\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update a script",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"code\": \"<string>\",\n  \"timeout\": \"<integer>\",\n  \"run_as_user_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"script_category_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scripts/:script_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts",
										":script_id"
									],
									"variable": [
										{
											"key": "script_id",
											"value": "<string>"
										}
									]
								},
								"description": "Update a script in a process."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"code\": \"<string>\",\n  \"timeout\": \"<integer>\",\n  \"run_as_user_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"script_category_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_id"
											],
											"variable": [
												{
													"key": "script_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a script",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scripts/:script_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts",
										":script_id"
									],
									"variable": [
										{
											"key": "script_id",
											"value": "<string>"
										}
									]
								},
								"description": "Delete a script in a process."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_id"
											],
											"variable": [
												{
													"key": "script_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "execution",
					"item": [
						{
							"name": "{key}",
							"item": [
								{
									"name": "Get the response of a script execution by execution key",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/execution/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												"execution",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "<string>"
												}
											]
										},
										"description": "Get the response of a script execution"
									},
									"response": [
										{
											"name": "response of a script execution",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/execution/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														"execution",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "execute",
					"item": [
						{
							"name": "{script_id}",
							"item": [
								{
									"name": "Execute script",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scripts/execute/:script_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												"execute",
												":script_id"
											],
											"variable": [
												{
													"key": "script_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Executes a script, with sample data/config data"
									},
									"response": [
										{
											"name": "success if the script was queued",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scripts/execute/:script_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														"execute",
														":script_id"
													],
													"variable": [
														{
															"key": "script_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\",\n  \"key\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Returns all scripts that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/scripts?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scripts"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Get a list of scripts in a process."
					},
					"response": [
						{
							"name": "list of scripts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scripts?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"title\": \"<string>\",\n      \"description\": \"<string>\",\n      \"language\": \"<string>\",\n      \"code\": \"<string>\",\n      \"timeout\": \"<integer>\",\n      \"run_as_user_id\": \"<integer>\",\n      \"key\": \"<string>\",\n      \"script_category_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"description\": \"<string>\",\n      \"language\": \"<string>\",\n      \"code\": \"<string>\",\n      \"timeout\": \"<integer>\",\n      \"run_as_user_id\": \"<integer>\",\n      \"key\": \"<string>\",\n      \"script_category_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {}\n}"
						}
					]
				},
				{
					"name": "Save a new script",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"code\": \"<string>\",\n  \"timeout\": \"<integer>\",\n  \"run_as_user_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"script_category_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/scripts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scripts"
							]
						},
						"description": "Create a new script in a process."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"code\": \"<string>\",\n  \"timeout\": \"<integer>\",\n  \"run_as_user_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"script_category_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"code\": \"<string>\",\n  \"timeout\": \"<integer>\",\n  \"run_as_user_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"script_category_id\": \"<integer>\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "script_categories",
			"item": [
				{
					"name": "{script_category_id}",
					"item": [
						{
							"name": "Get single script category by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/script_categories/:script_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"script_categories",
										":script_category_id"
									],
									"variable": [
										{
											"key": "script_category_id",
											"value": "<string>"
										}
									]
								},
								"description": "Display the specified script category."
							},
							"response": [
								{
									"name": "Successfully found the script",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/script_categories/:script_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"script_categories",
												":script_category_id"
											],
											"variable": [
												{
													"key": "script_category_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update a script Category",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/script_categories/:script_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"script_categories",
										":script_category_id"
									],
									"variable": [
										{
											"key": "script_category_id",
											"value": "<string>"
										}
									]
								},
								"description": "Updates the current element"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/script_categories/:script_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"script_categories",
												":script_category_id"
											],
											"variable": [
												{
													"key": "script_category_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Delete a script category",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/script_categories/:script_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"script_categories",
										":script_category_id"
									],
									"variable": [
										{
											"key": "script_category_id",
											"value": "<string>"
										}
									]
								},
								"description": "Remove the specified resource from storage."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/script_categories/:script_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"script_categories",
												":script_category_id"
											],
											"variable": [
												{
													"key": "script_category_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns all scripts categories that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/script_categories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"script_categories"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. All fields must match exactly."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Display a listing of the Script Categories."
					},
					"response": [
						{
							"name": "list of scripts categories",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/script_categories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"script_categories"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. All fields must match exactly."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"status\": \"INACTIVE\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"status\": \"INACTIVE\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {}\n}"
						}
					]
				},
				{
					"name": "Save a new Script Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/script_categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"script_categories"
							]
						},
						"description": "Store a newly created Script Category in storage"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/script_categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"script_categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "script-executors",
			"item": [
				{
					"name": "{script_executor}",
					"item": [
						{
							"name": "Update script executor",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"config\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/script-executors/:script_executor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"script-executors",
										":script_executor"
									],
									"variable": [
										{
											"key": "script_executor",
											"value": "<string>"
										}
									]
								},
								"description": "Update and rebuild the script executor"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"config\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/script-executors/:script_executor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"script-executors",
												":script_executor"
											],
											"variable": [
												{
													"key": "script_executor"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete a script executor",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/script-executors/:script_executor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"script-executors",
										":script_executor"
									],
									"variable": [
										{
											"key": "script_executor",
											"value": "<string>"
										}
									]
								},
								"description": "Delete a script executor"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/script-executors/:script_executor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"script-executors",
												":script_executor"
											],
											"variable": [
												{
													"key": "script_executor"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "cancel",
					"item": [
						{
							"name": "Cancel a script executor",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pidFile\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/script-executors/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"script-executors",
										"cancel"
									]
								},
								"description": "Cancel a script executor"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pidFile\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/script-executors/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"script-executors",
												"cancel"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"id\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "available-languages",
					"item": [
						{
							"name": "Returns all available languages",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/script-executors/available-languages?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"script-executors",
										"available-languages"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								},
								"description": "Get a list of available languages."
							},
							"response": [
								{
									"name": "list of available languages",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/script-executors/available-languages?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"script-executors",
												"available-languages"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
												},
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Field to order results by"
												},
												{
													"key": "order_direction",
													"value": "asc"
												},
												{
													"key": "per_page",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"text\": \"<string>\",\n      \"value\": \"<string>\",\n      \"initDockerFile\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"value\": \"<string>\",\n      \"initDockerFile\": \"<string>\"\n    }\n  ],\n  \"meta\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns all script executors that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/script-executors?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"script-executors"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Get a list of script executors."
					},
					"response": [
						{
							"name": "list of script executors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/script-executors?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"script-executors"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"title\": \"<string>\",\n      \"description\": \"<string>\",\n      \"language\": \"<string>\",\n      \"config\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"description\": \"<string>\",\n      \"language\": \"<string>\",\n      \"config\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {}\n}"
						}
					]
				},
				{
					"name": "Create a script executor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"config\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/script-executors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"script-executors"
							]
						},
						"description": "Create a script executor"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"config\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/script-executors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"script-executors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"id\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "screens",
			"item": [
				{
					"name": "{screens_id}",
					"item": [
						{
							"name": "duplicate",
							"item": [
								{
									"name": "duplicate a screen",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/screens/:screens_id/duplicate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"screens",
												":screens_id",
												"duplicate"
											],
											"variable": [
												{
													"key": "screens_id",
													"value": "<string>"
												}
											]
										},
										"description": "duplicate a Screen."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/screens/:screens_id/duplicate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"screens",
														":screens_id",
														"duplicate"
													],
													"variable": [
														{
															"key": "screens_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "draft",
							"item": [
								{
									"name": "Update a draft screen",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/screens/:screens_id/draft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"screens",
												":screens_id",
												"draft"
											],
											"variable": [
												{
													"key": "screens_id",
													"value": "<string>"
												}
											]
										},
										"description": "Update a draft Screen."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/screens/:screens_id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"screens",
														":screens_id",
														"draft"
													],
													"variable": [
														{
															"key": "screens_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get single screens by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/screens/:screens_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screens",
										":screens_id"
									],
									"variable": [
										{
											"key": "screens_id",
											"value": "<string>"
										}
									]
								},
								"description": "Get a single Screen."
							},
							"response": [
								{
									"name": "Successfully found the screen",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/screens/:screens_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"screens",
												":screens_id"
											],
											"variable": [
												{
													"key": "screens_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update a screen",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/screens/:screens_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screens",
										":screens_id"
									],
									"variable": [
										{
											"key": "screens_id",
											"value": "<string>"
										}
									]
								},
								"description": "Update a Screen."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/screens/:screens_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"screens",
												":screens_id"
											],
											"variable": [
												{
													"key": "screens_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a screen",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/screens/:screens_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screens",
										":screens_id"
									],
									"variable": [
										{
											"key": "screens_id",
											"value": "<string>"
										}
									]
								},
								"description": "Delete a Screen."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/screens/:screens_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"screens",
												":screens_id"
											],
											"variable": [
												{
													"key": "screens_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{screensId}",
					"item": [
						{
							"name": "export",
							"item": [
								{
									"name": "Export a single screen by ID",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/screens/:screensId/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"screens",
												":screensId",
												"export"
											],
											"variable": [
												{
													"key": "screensId",
													"value": "<string>"
												}
											]
										},
										"description": "Export the specified screen."
									},
									"response": [
										{
											"name": "Successfully exported the screen",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/screens/:screensId/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"screens",
														":screensId",
														"export"
													],
													"variable": [
														{
															"key": "screensId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"url\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "preview",
					"item": [
						{
							"name": "Preview a screen",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {},\n  \"watchers\": {},\n  \"computed\": {},\n  \"custom_css\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/screens/preview",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screens",
										"preview"
									]
								},
								"description": "Get preview a screen"
							},
							"response": [
								{
									"name": "Successfully found the screen",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {},\n  \"watchers\": {},\n  \"computed\": {},\n  \"custom_css\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/screens/preview",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"screens",
												"preview"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "import",
					"item": [
						{
							"name": "Import a new screen",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<string>",
											"description": "file to import",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/screens/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screens",
										"import"
									]
								},
								"description": "Import the specified screen."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "file to import",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/screens/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"screens",
												"import"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns all screens that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/screens?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=&exclude=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"screens"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								},
								{
									"key": "exclude",
									"value": "",
									"description": "Comma separated list of fields to exclude from the response"
								}
							]
						},
						"description": "Get a list of Screens."
					},
					"response": [
						{
							"name": "list of screens",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/screens?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=&exclude=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screens"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										},
										{
											"key": "exclude",
											"value": "",
											"description": "Comma separated list of fields to exclude from the response"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"custom_css\": \"<string>\",\n      \"screen_category_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"custom_css\": \"<string>\",\n      \"screen_category_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {}\n}"
						}
					]
				},
				{
					"name": "Save a new screens",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/screens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"screens"
							]
						},
						"description": "Create a new Screen."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/screens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"title\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_css\": \"<string>\",\n  \"screen_category_id\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "screen_categories",
			"item": [
				{
					"name": "{screen_category_id}",
					"item": [
						{
							"name": "Get single screen category by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/screen_categories/:screen_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screen_categories",
										":screen_category_id"
									],
									"variable": [
										{
											"key": "screen_category_id",
											"value": "<string>"
										}
									]
								},
								"description": "Display the specified screen category."
							},
							"response": [
								{
									"name": "Successfully found the screen",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/screen_categories/:screen_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"screen_categories",
												":screen_category_id"
											],
											"variable": [
												{
													"key": "screen_category_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update a screen Category",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/screen_categories/:screen_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screen_categories",
										":screen_category_id"
									],
									"variable": [
										{
											"key": "screen_category_id",
											"value": "<string>"
										}
									]
								},
								"description": "Updates the current element"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/screen_categories/:screen_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"screen_categories",
												":screen_category_id"
											],
											"variable": [
												{
													"key": "screen_category_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Delete a screen category",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/screen_categories/:screen_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screen_categories",
										":screen_category_id"
									],
									"variable": [
										{
											"key": "screen_category_id",
											"value": "<string>"
										}
									]
								},
								"description": "Remove the specified resource from storage."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/screen_categories/:screen_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"screen_categories",
												":screen_category_id"
											],
											"variable": [
												{
													"key": "screen_category_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns all screens categories that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/screen_categories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"screen_categories"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. All fields must match exactly."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Display a listing of the Screen Categories."
					},
					"response": [
						{
							"name": "list of screens categories",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/screen_categories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screen_categories"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. All fields must match exactly."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {}\n}"
						}
					]
				},
				{
					"name": "Save a new Screen Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/screen_categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"screen_categories"
							]
						},
						"description": "Store a newly created Screen Category in storage"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/screen_categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"screen_categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "saved-searches",
			"item": [
				{
					"name": "{saved_search_id}",
					"item": [
						{
							"name": "charts",
							"item": [
								{
									"name": "Returns all saved search charts that the user has access to",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:saved_search_id/charts?filter=<string>&type=request&order_by=<string>&order_direction=asc&per_page=10&include=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":saved_search_id",
												"charts"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
												},
												{
													"key": "type",
													"value": "request",
													"description": "Only return saved searches by type"
												},
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Field to order results by"
												},
												{
													"key": "order_direction",
													"value": "asc"
												},
												{
													"key": "per_page",
													"value": "10"
												},
												{
													"key": "include",
													"value": "",
													"description": "Include data from related models in payload. Comma separated list."
												}
											],
											"variable": [
												{
													"key": "saved_search_id"
												}
											]
										},
										"description": "Get a list of SavedSearchCharts."
									},
									"response": [
										{
											"name": "list of saved search charts",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/saved-searches/:saved_search_id/charts?filter=<string>&type=request&order_by=<string>&order_direction=asc&per_page=10&include=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"saved-searches",
														":saved_search_id",
														"charts"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>",
															"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
														},
														{
															"key": "type",
															"value": "request",
															"description": "Only return saved searches by type"
														},
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Field to order results by"
														},
														{
															"key": "order_direction",
															"value": "asc"
														},
														{
															"key": "per_page",
															"value": "10"
														},
														{
															"key": "include",
															"value": "",
															"description": "Include data from related models in payload. Comma separated list."
														}
													],
													"variable": [
														{
															"key": "saved_search_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"saved_search_id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\",\n      \"title\": \"<string>\",\n      \"type\": \"bar-vertical\",\n      \"config\": {},\n      \"sort\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"saved_search_id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\",\n      \"title\": \"<string>\",\n      \"type\": \"doughnut\",\n      \"config\": {},\n      \"sort\": \"<integer>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update several saved search charts at once",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<string>\",\n    \"saved_search_id\": \"<string>\",\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"deleted_at\": \"<dateTime>\",\n    \"title\": \"<string>\",\n    \"type\": \"line\",\n    \"config\": {},\n    \"sort\": \"<integer>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"saved_search_id\": \"<string>\",\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"deleted_at\": \"<dateTime>\",\n    \"title\": \"<string>\",\n    \"type\": \"line\",\n    \"config\": {},\n    \"sort\": \"<integer>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:saved_search_id/charts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":saved_search_id",
												"charts"
											],
											"variable": [
												{
													"key": "saved_search_id",
													"value": "<string>"
												}
											]
										},
										"description": "Batch update several SavedSearchCharts."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"id\": \"<string>\",\n    \"saved_search_id\": \"<string>\",\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"deleted_at\": \"<dateTime>\",\n    \"title\": \"<string>\",\n    \"type\": \"line\",\n    \"config\": {},\n    \"sort\": \"<integer>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"saved_search_id\": \"<string>\",\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"deleted_at\": \"<dateTime>\",\n    \"title\": \"<string>\",\n    \"type\": \"line\",\n    \"config\": {},\n    \"sort\": \"<integer>\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/saved-searches/:saved_search_id/charts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"saved-searches",
														":saved_search_id",
														"charts"
													],
													"variable": [
														{
															"key": "saved_search_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Save a new saved search chart",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"bar-vertical\",\n  \"config\": {\n    \"enim7\": \"true\",\n    \"labore8c\": \"true\"\n  },\n  \"sort\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:saved_search_id/charts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":saved_search_id",
												"charts"
											],
											"variable": [
												{
													"key": "saved_search_id",
													"value": "<string>"
												}
											]
										},
										"description": "Create a new SavedSearchChart."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"bar-vertical\",\n  \"config\": {\n    \"enim7\": \"true\",\n    \"labore8c\": \"true\"\n  },\n  \"sort\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/saved-searches/:saved_search_id/charts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"saved-searches",
														":saved_search_id",
														"charts"
													],
													"variable": [
														{
															"key": "saved_search_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"saved_search_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"deleted_at\": \"<dateTime>\",\n  \"title\": \"<string>\",\n  \"type\": \"doughnut\",\n  \"config\": {},\n  \"sort\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete a saved search",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/saved-searches/:saved_search_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches",
										":saved_search_id"
									],
									"variable": [
										{
											"key": "saved_search_id",
											"value": "<string>"
										}
									]
								},
								"description": "Delete a SavedSearch."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:saved_search_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":saved_search_id"
											],
											"variable": [
												{
													"key": "saved_search_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{savedSearchId}",
					"item": [
						{
							"name": "users",
							"item": [
								{
									"name": "Returns all users",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:savedSearchId/users?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":savedSearchId",
												"users"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "Filter results by string. Searches First Name, Last Name, Email and Username."
												},
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Field to order results by"
												},
												{
													"key": "order_direction",
													"value": "asc"
												},
												{
													"key": "per_page",
													"value": "10"
												},
												{
													"key": "include",
													"value": "",
													"description": "Include data from related models in payload. Comma separated list."
												}
											],
											"variable": [
												{
													"key": "savedSearchId",
													"value": "<string>"
												}
											]
										},
										"description": "Display a listing of the resource."
									},
									"response": [
										{
											"name": "list of users",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/saved-searches/:savedSearchId/users?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"saved-searches",
														":savedSearchId",
														"users"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>",
															"description": "Filter results by string. Searches First Name, Last Name, Email and Username."
														},
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Field to order results by"
														},
														{
															"key": "order_direction",
															"value": "asc"
														},
														{
															"key": "per_page",
															"value": "10"
														},
														{
															"key": "include",
															"value": "",
															"description": "Include data from related models in payload. Comma separated list."
														}
													],
													"variable": [
														{
															"key": "savedSearchId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"email\": \"<email>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"username\": \"<string>\",\n      \"password\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"postal\": \"<string>\",\n      \"country\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"fax\": \"<string>\",\n      \"cell\": \"<string>\",\n      \"title\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"datetime_format\": \"<string>\",\n      \"language\": \"<string>\",\n      \"is_administrator\": \"<boolean>\",\n      \"expires_at\": \"<string>\",\n      \"loggedin_at\": \"<string>\",\n      \"remember_token\": \"<string>\",\n      \"status\": \"SCHEDULED\",\n      \"fullname\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"media\": [\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        }\n      ],\n      \"birthdate\": \"<date>\",\n      \"delegation_user_id\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"meta\": {\n        \"anim_e\": \"qui amet ex quis in\",\n        \"ut_9a\": -30312988.00221096,\n        \"do_c\": true\n      },\n      \"force_change_password\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"username\": \"<string>\",\n      \"password\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"postal\": \"<string>\",\n      \"country\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"fax\": \"<string>\",\n      \"cell\": \"<string>\",\n      \"title\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"datetime_format\": \"<string>\",\n      \"language\": \"<string>\",\n      \"is_administrator\": \"<boolean>\",\n      \"expires_at\": \"<string>\",\n      \"loggedin_at\": \"<string>\",\n      \"remember_token\": \"<string>\",\n      \"status\": \"OUT_OF_OFFICE\",\n      \"fullname\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"media\": [\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        }\n      ],\n      \"birthdate\": \"<date>\",\n      \"delegation_user_id\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"meta\": {\n        \"adipisicing_319\": 78923715\n      },\n      \"force_change_password\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "groups",
							"item": [
								{
									"name": "Returns all groups that the user has access to",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:savedSearchId/groups?order_by=<string>&order_direction=asc&per_page=10&include=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":savedSearchId",
												"groups"
											],
											"query": [
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Field to order results by"
												},
												{
													"key": "order_direction",
													"value": "asc"
												},
												{
													"key": "per_page",
													"value": "10"
												},
												{
													"key": "include",
													"value": "",
													"description": "Include data from related models in payload. Comma separated list."
												}
											],
											"variable": [
												{
													"key": "savedSearchId"
												}
											]
										},
										"description": "Display a listing of the resource."
									},
									"response": [
										{
											"name": "list of groups",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/saved-searches/:savedSearchId/groups?order_by=<string>&order_direction=asc&per_page=10&include=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"saved-searches",
														":savedSearchId",
														"groups"
													],
													"query": [
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Field to order results by"
														},
														{
															"key": "order_direction",
															"value": "asc"
														},
														{
															"key": "per_page",
															"value": "10"
														},
														{
															"key": "include",
															"value": "",
															"description": "Include data from related models in payload. Comma separated list."
														}
													],
													"variable": [
														{
															"key": "savedSearchId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"manager_id\": \"<integer>\",\n      \"status\": \"ACTIVE\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"manager_id\": \"<integer>\",\n      \"status\": \"INACTIVE\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "columns",
							"item": [
								{
									"name": "Returns all columns associated with a Saved Search",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:savedSearchId/columns?include=available&include=available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":savedSearchId",
												"columns"
											],
											"query": [
												{
													"key": "include",
													"value": "available",
													"description": "Include specific categories. Comma separated list."
												},
												{
													"key": "include",
													"value": "available",
													"description": "Include specific categories. Comma separated list."
												}
											],
											"variable": [
												{
													"key": "savedSearchId",
													"value": "<string>"
												}
											]
										},
										"description": "Display a listing of columns."
									},
									"response": [
										{
											"name": "Categorized list of columns",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/saved-searches/:savedSearchId/columns?include=available",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"saved-searches",
														":savedSearchId",
														"columns"
													],
													"query": [
														{
															"key": "include",
															"value": "available",
															"description": "Include specific categories. Comma separated list."
														}
													],
													"variable": [
														{
															"key": "savedSearchId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"current\": [\n    {\n      \"label\": \"<string>\",\n      \"field\": \"<string>\",\n      \"sortable\": \"<boolean>\",\n      \"default\": \"<boolean>\",\n      \"format\": \"<string>\",\n      \"mask\": \"<string>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"field\": \"<string>\",\n      \"sortable\": \"<boolean>\",\n      \"default\": \"<boolean>\",\n      \"format\": \"<string>\",\n      \"mask\": \"<string>\"\n    }\n  ],\n  \"default\": [\n    {\n      \"label\": \"<string>\",\n      \"field\": \"<string>\",\n      \"sortable\": \"<boolean>\",\n      \"default\": \"<boolean>\",\n      \"format\": \"<string>\",\n      \"mask\": \"<string>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"field\": \"<string>\",\n      \"sortable\": \"<boolean>\",\n      \"default\": \"<boolean>\",\n      \"format\": \"<string>\",\n      \"mask\": \"<string>\"\n    }\n  ],\n  \"available\": [\n    {\n      \"label\": \"<string>\",\n      \"field\": \"<string>\",\n      \"sortable\": \"<boolean>\",\n      \"default\": \"<boolean>\",\n      \"format\": \"<string>\",\n      \"mask\": \"<string>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"field\": \"<string>\",\n      \"sortable\": \"<boolean>\",\n      \"default\": \"<boolean>\",\n      \"format\": \"<string>\",\n      \"mask\": \"<string>\"\n    }\n  ],\n  \"data\": [\n    {\n      \"label\": \"<string>\",\n      \"field\": \"<string>\",\n      \"sortable\": \"<boolean>\",\n      \"default\": \"<boolean>\",\n      \"format\": \"<string>\",\n      \"mask\": \"<string>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"field\": \"<string>\",\n      \"sortable\": \"<boolean>\",\n      \"default\": \"<boolean>\",\n      \"format\": \"<string>\",\n      \"mask\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get single saved searches by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-searches/:savedSearchId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches",
										":savedSearchId"
									],
									"variable": [
										{
											"key": "savedSearchId",
											"value": "<string>"
										}
									]
								},
								"description": "Get a single SavedSearch."
							},
							"response": [
								{
									"name": "Successfully found the saved search",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:savedSearchId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":savedSearchId"
											],
											"variable": [
												{
													"key": "savedSearchId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"meta\": {},\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}"
								}
							]
						},
						{
							"name": "Update a saved search",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"eiusmod_1b\": \"true\"\n  },\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-searches/:savedSearchId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches",
										":savedSearchId"
									],
									"variable": [
										{
											"key": "savedSearchId",
											"value": "<string>"
										}
									]
								},
								"description": "Update a SavedSearch."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"meta\": {\n    \"eiusmod_1b\": \"true\"\n  },\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:savedSearchId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":savedSearchId"
											],
											"variable": [
												{
													"key": "savedSearchId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"meta\": {},\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "reports",
					"item": [
						{
							"name": "{reportId}",
							"item": [
								{
									"name": "Update a saved search",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"meta\": {\n    \"eiusmod_1b\": \"true\"\n  },\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/reports/:reportId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												"reports",
												":reportId"
											],
											"variable": [
												{
													"key": "reportId",
													"value": "<string>"
												}
											]
										},
										"description": "Update a Report"
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"meta\": {\n    \"eiusmod_1b\": \"true\"\n  },\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/saved-searches/reports/:reportId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"saved-searches",
														"reports",
														":reportId"
													],
													"variable": [
														{
															"key": "reportId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"meta\": {},\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Save a new report",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"adhoc\",\n  \"format\": \"csv\",\n  \"saved_search_id\": \"<integer>\",\n  \"config\": {\n    \"velitc69\": \"true\",\n    \"in_e\": \"true\"\n  },\n  \"to\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"subject\": \"<string>\",\n  \"body\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-searches/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches",
										"reports"
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"adhoc\",\n  \"format\": \"csv\",\n  \"saved_search_id\": \"<integer>\",\n  \"config\": {\n    \"velitc69\": \"true\",\n    \"in_e\": \"true\"\n  },\n  \"to\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"subject\": \"<string>\",\n  \"body\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/reports",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												"reports"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"meta\": {},\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "icons",
					"item": [
						{
							"name": "Returns all icons for saved searches",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-searches/icons?per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches",
										"icons"
									],
									"query": [
										{
											"key": "per_page",
											"value": "10"
										}
									]
								},
								"description": "Get a list of icons available for SavedSearches."
							},
							"response": [
								{
									"name": "list of icons for saved searches",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/icons?per_page=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												"icons"
											],
											"query": [
												{
													"key": "per_page",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "charts",
					"item": [
						{
							"name": "{chart_id}",
							"item": [
								{
									"name": "fields",
									"item": [
										{
											"name": "Get available chart fields for a Saved Search by ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/saved-searches/charts/:chart_id/fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"saved-searches",
														"charts",
														":chart_id",
														"fields"
													],
													"variable": [
														{
															"key": "chart_id",
															"value": "<string>"
														}
													]
												},
												"description": "Get available chart fields for a Saved Search."
											},
											"response": [
												{
													"name": "Successfully found the saved search",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/saved-searches/charts/:chart_id/fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"saved-searches",
																"charts",
																":chart_id",
																"fields"
															],
															"variable": [
																{
																	"key": "chart_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"meta\": {},\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get single saved search chart by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/charts/:chart_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												"charts",
												":chart_id"
											],
											"variable": [
												{
													"key": "chart_id",
													"value": "<string>"
												}
											]
										},
										"description": "Get a single SavedSearchChart."
									},
									"response": [
										{
											"name": "Successfully found the saved search chart",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/saved-searches/charts/:chart_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"saved-searches",
														"charts",
														":chart_id"
													],
													"variable": [
														{
															"key": "chart_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"saved_search_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"deleted_at\": \"<dateTime>\",\n  \"title\": \"<string>\",\n  \"type\": \"doughnut\",\n  \"config\": {},\n  \"sort\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Update a saved search chart",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"bar-vertical\",\n  \"config\": {\n    \"enim7\": \"true\",\n    \"labore8c\": \"true\"\n  },\n  \"sort\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/charts/:chart_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												"charts",
												":chart_id"
											],
											"variable": [
												{
													"key": "chart_id",
													"value": "<string>"
												}
											]
										},
										"description": "Update a SavedSearchChart."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"<string>\",\n  \"type\": \"bar-vertical\",\n  \"config\": {\n    \"enim7\": \"true\",\n    \"labore8c\": \"true\"\n  },\n  \"sort\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/saved-searches/charts/:chart_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"saved-searches",
														"charts",
														":chart_id"
													],
													"variable": [
														{
															"key": "chart_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"saved_search_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"deleted_at\": \"<dateTime>\",\n  \"title\": \"<string>\",\n  \"type\": \"doughnut\",\n  \"config\": {},\n  \"sort\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Delete a saved search chart",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/charts/:chart_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												"charts",
												":chart_id"
											],
											"variable": [
												{
													"key": "chart_id",
													"value": "<string>"
												}
											]
										},
										"description": "Delete a SavedSearchChart."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/saved-searches/charts/:chart_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"saved-searches",
														"charts",
														":chart_id"
													],
													"variable": [
														{
															"key": "chart_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Returns all saved searches that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/saved-searches?filter=<string>&type=request&subset=shared&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saved-searches"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "type",
									"value": "request",
									"description": "Only return saved searches by type"
								},
								{
									"key": "subset",
									"value": "shared",
									"description": "Only return saved searches that are yours or those that have been shared with you"
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Get a list of SavedSearches."
					},
					"response": [
						{
							"name": "list of saved searches",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-searches?filter=<string>&type=request&subset=shared&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "type",
											"value": "request",
											"description": "Only return saved searches by type"
										},
										{
											"key": "subset",
											"value": "shared",
											"description": "Only return saved searches that are yours or those that have been shared with you"
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"meta\": {},\n      \"pmql\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"request\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"meta\": {},\n      \"pmql\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"task\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new saved search",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meta\": {\n    \"eiusmod_1b\": \"true\"\n  },\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/saved-searches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saved-searches"
							]
						},
						"description": "Create a new SavedSearch."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"eiusmod_1b\": \"true\"\n  },\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"meta\": {},\n  \"pmql\": \"<string>\",\n  \"title\": \"<string>\",\n  \"type\": \"task\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "requests",
			"item": [
				{
					"name": "{request_id}",
					"item": [
						{
							"name": "files",
							"item": [
								{
									"name": "{file_id}",
									"item": [
										{
											"name": "Get a file uploaded to a request",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/requests/:request_id/files/:file_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"requests",
														":request_id",
														"files",
														":file_id"
													],
													"variable": [
														{
															"key": "request_id",
															"value": "<integer>"
														},
														{
															"key": "file_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Display the specified resource."
											},
											"response": [
												{
													"name": "File stream",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/requests/:request_id/files/:file_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"requests",
																":request_id",
																"files",
																":file_id"
															],
															"variable": [
																{
																	"key": "request_id"
																},
																{
																	"key": "file_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/octet-stream"
														}
													],
													"cookie": [],
													"body": "<string>"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/requests/:request_id/files/:file_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"requests",
																":request_id",
																"files",
																":file_id"
															],
															"variable": [
																{
																	"key": "request_id"
																},
																{
																	"key": "file_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Delete all media associated with a request",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/requests/:request_id/files/:file_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"requests",
														":request_id",
														"files",
														":file_id"
													],
													"variable": [
														{
															"key": "request_id",
															"value": "<string>"
														},
														{
															"key": "file_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Remove the specified resource from storage."
											},
											"response": [
												{
													"name": "success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/requests/:request_id/files/:file_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"requests",
																":request_id",
																"files",
																":file_id"
															],
															"variable": [
																{
																	"key": "request_id"
																},
																{
																	"key": "file_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/requests/:request_id/files/:file_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"requests",
																":request_id",
																"files",
																":file_id"
															],
															"variable": [
																{
																	"key": "request_id"
																},
																{
																	"key": "file_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Returns the list of files associated with a request",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/requests/:request_id/files?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												":request_id",
												"files"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
												},
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Field to order results by"
												},
												{
													"key": "order_direction",
													"value": "asc"
												},
												{
													"key": "per_page",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "request_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Display a listing of the resource."
									},
									"response": [
										{
											"name": "list of files",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/requests/:request_id/files?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"requests",
														":request_id",
														"files"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>",
															"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
														},
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Field to order results by"
														},
														{
															"key": "order_direction",
															"value": "asc"
														},
														{
															"key": "per_page",
															"value": "10"
														}
													],
													"variable": [
														{
															"key": "request_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Save a new media file to a request",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "save a new media file",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/requests/:request_id/files?data_name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												":request_id",
												"files"
											],
											"query": [
												{
													"key": "data_name",
													"value": "<string>",
													"description": "Variable name in the request data to use for the file name"
												}
											],
											"variable": [
												{
													"key": "request_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Store a newly created resource in storage."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<string>",
															"description": "save a new media file",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/requests/:request_id/files?data_name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"requests",
														":request_id",
														"files"
													],
													"query": [
														{
															"key": "data_name",
															"value": "<string>",
															"description": "Variable name in the request data to use for the file name"
														}
													],
													"variable": [
														{
															"key": "request_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"fileUploadId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "data_sources",
							"item": [
								{
									"name": "{data_source_id}",
									"item": [
										{
											"name": "execute Data Source",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {\n    \"endpoint\": \"<string>\",\n    \"dataMapping\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"outboundConfig\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/requests/:request_id/data_sources/:data_source_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"requests",
														":request_id",
														"data_sources",
														":data_source_id"
													],
													"variable": [
														{
															"key": "request_id",
															"value": "<string>"
														},
														{
															"key": "data_source_id",
															"value": "<string>"
														}
													]
												},
												"description": "Execute a data Source endpoint"
											},
											"response": [
												{
													"name": "success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"config\": {\n    \"endpoint\": \"<string>\",\n    \"dataMapping\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"outboundConfig\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/requests/:request_id/data_sources/:data_source_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"requests",
																":request_id",
																"data_sources",
																":data_source_id"
															],
															"variable": [
																{
																	"key": "request_id"
																},
																{
																	"key": "data_source_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<integer>\",\n  \"response\": {}\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{process_request_id}",
					"item": [
						{
							"name": "events",
							"item": [
								{
									"name": "{event_id}",
									"item": [
										{
											"name": "Update a process request event",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/requests/:process_request_id/events/:event_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"requests",
														":process_request_id",
														"events",
														":event_id"
													],
													"variable": [
														{
															"key": "process_request_id",
															"value": "<string>"
														},
														{
															"key": "event_id",
															"value": "<string>"
														}
													]
												},
												"description": "Trigger a intermediate catch event"
											},
											"response": [
												{
													"name": "success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/requests/:process_request_id/events/:event_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"requests",
																":process_request_id",
																"events",
																":event_id"
															],
															"variable": [
																{
																	"key": "process_request_id"
																},
																{
																	"key": "event_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Get single process request by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/:process_request_id?include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										":process_request_id"
									],
									"query": [
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									],
									"variable": [
										{
											"key": "process_request_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Display the specified resource."
							},
							"response": [
								{
									"name": "Successfully found the process",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/requests/:process_request_id?include=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												":process_request_id"
											],
											"query": [
												{
													"key": "include",
													"value": "",
													"description": "Include data from related models in payload. Comma separated list."
												}
											],
											"variable": [
												{
													"key": "process_request_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/requests/:process_request_id?include=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												":process_request_id"
											],
											"query": [
												{
													"key": "include",
													"value": "",
													"description": "Include data from related models in payload. Comma separated list."
												}
											],
											"variable": [
												{
													"key": "process_request_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a process request",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<string>\",\n  \"callable_id\": \"<string>\",\n  \"data\": {},\n  \"status\": \"COMPLETED\",\n  \"name\": \"<string>\",\n  \"process_id\": \"<integer>\",\n  \"process\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/requests/:process_request_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										":process_request_id"
									],
									"variable": [
										{
											"key": "process_request_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update a request"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<string>\",\n  \"callable_id\": \"<string>\",\n  \"data\": {},\n  \"status\": \"COMPLETED\",\n  \"name\": \"<string>\",\n  \"process_id\": \"<integer>\",\n  \"process\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/requests/:process_request_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												":process_request_id"
											],
											"variable": [
												{
													"key": "process_request_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<string>\",\n  \"callable_id\": \"<string>\",\n  \"data\": {},\n  \"status\": \"COMPLETED\",\n  \"name\": \"<string>\",\n  \"process_id\": \"<integer>\",\n  \"process\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/requests/:process_request_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												":process_request_id"
											],
											"variable": [
												{
													"key": "process_request_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete a process request",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/:process_request_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										":process_request_id"
									],
									"variable": [
										{
											"key": "process_request_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Delete a request"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/requests/:process_request_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												":process_request_id"
											],
											"variable": [
												{
													"key": "process_request_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/requests/:process_request_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												":process_request_id"
											],
											"variable": [
												{
													"key": "process_request_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "data_sources",
					"item": [
						{
							"name": "{data_source_id}",
							"item": [
								{
									"name": "resources",
									"item": [
										{
											"name": "{endpoint}",
											"item": [
												{
													"name": "data",
													"item": [
														{
															"name": "Get Data from Data Source",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/requests/data_sources/:data_source_id/resources/:endpoint/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"requests",
																		"data_sources",
																		":data_source_id",
																		"resources",
																		":endpoint",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "data_source_id",
																			"value": "<string>"
																		},
																		{
																			"key": "endpoint",
																			"value": "<string>"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "success",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/requests/data_sources/:data_source_id/resources/:endpoint/data",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"requests",
																				"data_sources",
																				":data_source_id",
																				"resources",
																				":endpoint",
																				"data"
																			],
																			"variable": [
																				{
																					"key": "data_source_id"
																				},
																				{
																					"key": "endpoint"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"status\": \"<integer>\",\n  \"response\": {}\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "execute Data Source",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"endpoint\": \"<string>\",\n    \"dataMapping\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"outboundConfig\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"data\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/requests/data_sources/:data_source_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"requests",
												"data_sources",
												":data_source_id"
											],
											"variable": [
												{
													"key": "data_source_id",
													"value": "<string>"
												}
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {\n    \"endpoint\": \"<string>\",\n    \"dataMapping\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"outboundConfig\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"data\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/requests/data_sources/:data_source_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"requests",
														"data_sources",
														":data_source_id"
													],
													"variable": [
														{
															"key": "data_source_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<integer>\",\n  \"response\": {}\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Returns all process Requests that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/requests?type=all&filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"requests"
							],
							"query": [
								{
									"key": "type",
									"value": "all",
									"description": "Only return requests by type (all|in_progress|completed)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Display a listing of the resource."
					},
					"response": [
						{
							"name": "list of processes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests?type=all&filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests"
									],
									"query": [
										{
											"key": "type",
											"value": "all",
											"description": "Only return requests by type (all|in_progress|completed)"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    {\n      \"value\": \"<Error: Could not resolve allOf schema\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "read_notifications",
			"item": [
				{
					"name": "Mark notifications as read by the user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"routes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/read_notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"read_notifications"
							]
						},
						"description": "Update notification as read"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"routes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/read_notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"read_notifications"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "read_all_notifications",
			"item": [
				{
					"name": "Mark notifications as read by id and type",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<integer>\",\n  \"type\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/read_all_notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"read_all_notifications"
							]
						},
						"description": "Update all notification as read."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\",\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/read_all_notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"read_all_notifications"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "processes",
			"item": [
				{
					"name": "{process_id}",
					"item": [
						{
							"name": "import",
							"item": [
								{
									"name": "assignments",
									"item": [
										{
											"name": "Update assignments after import",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cancel_request\": {},\n  \"edit_data\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/processes/:process_id/import/assignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"processes",
														":process_id",
														"import",
														"assignments"
													],
													"variable": [
														{
															"key": "process_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Import Assignments of process."
											},
											"response": [
												{
													"name": "success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cancel_request\": {},\n  \"edit_data\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/processes/:process_id/import/assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"processes",
																":process_id",
																"import",
																"assignments"
															],
															"variable": [
																{
																	"key": "process_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{processId}",
					"item": [
						{
							"name": "restore",
							"item": [
								{
									"name": "Restore an inactive process",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId",
												"restore"
											],
											"variable": [
												{
													"key": "processId",
													"value": "<integer>"
												}
											]
										},
										"description": "Reverses the soft delete of the element."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/processes/:processId/restore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"processes",
														":processId",
														"restore"
													],
													"variable": [
														{
															"key": "processId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\",\n  \"user_id\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"deleted_at\": \"<dateTime>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"notifications\": {},\n  \"task_notifications\": {}\n}"
										}
									]
								}
							]
						},
						{
							"name": "export",
							"item": [
								{
									"name": "Export a single process by ID and return a URL to download it",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId",
												"export"
											],
											"variable": [
												{
													"key": "processId",
													"value": "<integer>"
												}
											]
										},
										"description": "Export the specified process."
									},
									"response": [
										{
											"name": "Successfully built the process for export",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/processes/:processId/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"processes",
														":processId",
														"export"
													],
													"variable": [
														{
															"key": "processId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"url\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "draft",
							"item": [
								{
									"name": "Update a draft process",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/processes/:processId/draft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId",
												"draft"
											],
											"variable": [
												{
													"key": "processId",
													"value": "<integer>"
												}
											]
										},
										"description": "Update draft process."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/processes/:processId/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"processes",
														":processId",
														"draft"
													],
													"variable": [
														{
															"key": "processId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\",\n  \"user_id\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"deleted_at\": \"<dateTime>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"notifications\": {},\n  \"task_notifications\": {}\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get single process by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/processes/:processId?include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes",
										":processId"
									],
									"query": [
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									],
									"variable": [
										{
											"key": "processId",
											"value": "<integer>"
										}
									]
								},
								"description": "Display the specified resource."
							},
							"response": [
								{
									"name": "Successfully found the process",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId?include=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"query": [
												{
													"key": "include",
													"value": "",
													"description": "Include data from related models in payload. Comma separated list."
												}
											],
											"variable": [
												{
													"key": "processId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\",\n  \"user_id\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"deleted_at\": \"<dateTime>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"notifications\": {},\n  \"task_notifications\": {}\n}"
								}
							]
						},
						{
							"name": "Update a process",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/processes/:processId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes",
										":processId"
									],
									"variable": [
										{
											"key": "processId",
											"value": "<integer>"
										}
									]
								},
								"description": "Updates the current element."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\",\n  \"user_id\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"deleted_at\": \"<dateTime>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"notifications\": {},\n  \"task_notifications\": {}\n}"
								}
							]
						},
						{
							"name": "Delete a process",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/processes/:processId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes",
										":processId"
									],
									"variable": [
										{
											"key": "processId",
											"value": "<integer>"
										}
									]
								},
								"description": "Remove the specified resource from storage."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "import",
					"item": [
						{
							"name": "{code}",
							"item": [
								{
									"name": "is_ready",
									"item": [
										{
											"name": "Check if the import is ready",
											"request": {
												"method": "HEAD",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/processes/import/:code/is_ready",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"processes",
														"import",
														":code",
														"is_ready"
													],
													"variable": [
														{
															"key": "code",
															"value": "<string>"
														}
													]
												},
												"description": "Check if the import is ready"
											},
											"response": [
												{
													"name": "check is import is ready",
													"originalRequest": {
														"method": "HEAD",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/processes/import/:code/is_ready",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"processes",
																"import",
																":code",
																"is_ready"
															],
															"variable": [
																{
																	"key": "code"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ready\": \"<boolean>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "validation",
							"item": [
								{
									"name": "Validate a import",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "file to import",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/processes/import/validation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												"import",
												"validation"
											]
										},
										"description": "Validate the specified process before importing."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<string>",
															"description": "file to import",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/processes/import/validation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"processes",
														"import",
														"validation"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Import a new process",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<string>",
											"description": "file to import",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/processes/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes",
										"import"
									]
								},
								"description": "Import the specified process."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "file to import",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/processes/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												"import"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns all processes that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/processes?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&status=ACTIVE&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"processes"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "status",
									"value": "ACTIVE",
									"description": "ACTIVE or INACTIVE"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Get list Process"
					},
					"response": [
						{
							"name": "list of processes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/processes?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&status=ACTIVE&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "status",
											"value": "ACTIVE",
											"description": "ACTIVE or INACTIVE"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"process_category_id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"status\": \"ARCHIVED\",\n      \"pause_timer_start\": \"<integer>\",\n      \"cancel_screen_id\": \"<integer>\",\n      \"has_timer_start_events\": \"<boolean>\",\n      \"request_detail_screen_id\": \"<integer>\",\n      \"is_valid\": \"<integer>\",\n      \"package_key\": \"<string>\",\n      \"start_events\": [\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"warnings\": \"<string>\",\n      \"self_service_tasks\": {},\n      \"category\": {},\n      \"manager_id\": \"<integer>\",\n      \"user_id\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"deleted_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"notifications\": {},\n      \"task_notifications\": {}\n    },\n    {\n      \"process_category_id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"status\": \"INACTIVE\",\n      \"pause_timer_start\": \"<integer>\",\n      \"cancel_screen_id\": \"<integer>\",\n      \"has_timer_start_events\": \"<boolean>\",\n      \"request_detail_screen_id\": \"<integer>\",\n      \"is_valid\": \"<integer>\",\n      \"package_key\": \"<string>\",\n      \"start_events\": [\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"eventDefinitions\": {},\n          \"parallelMultiple\": \"<boolean>\",\n          \"outgoing\": {},\n          \"incoming\": {},\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"warnings\": \"<string>\",\n      \"self_service_tasks\": {},\n      \"category\": {},\n      \"manager_id\": \"<integer>\",\n      \"user_id\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"deleted_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"notifications\": {},\n      \"task_notifications\": {}\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new process",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/processes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"processes"
							]
						},
						"description": "Store a newly created resource in storage."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/processes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\",\n  \"user_id\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"deleted_at\": \"<dateTime>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"notifications\": {},\n  \"task_notifications\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "process_events",
			"item": [
				{
					"name": "{process_id}",
					"item": [
						{
							"name": "Start a new process",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process_events/:process_id?event=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process_events",
										":process_id"
									],
									"query": [
										{
											"key": "event",
											"value": "<string>",
											"description": "(Required) Node ID of the start event"
										}
									],
									"variable": [
										{
											"key": "process_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Trigger an start event within a process."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process_events/:process_id?event=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process_events",
												":process_id"
											],
											"query": [
												{
													"key": "event",
													"value": "<string>",
													"description": "(Required) Node ID of the start event"
												}
											],
											"variable": [
												{
													"key": "process_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "process_categories",
			"item": [
				{
					"name": "{process_category_id}",
					"item": [
						{
							"name": "Get single process category by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process_categories/:process_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process_categories",
										":process_category_id"
									],
									"variable": [
										{
											"key": "process_category_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Display the specified Process category."
							},
							"response": [
								{
									"name": "Successfully found the process",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process_categories/:process_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process_categories",
												":process_category_id"
											],
											"variable": [
												{
													"key": "process_category_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update a process Category",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process_categories/:process_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process_categories",
										":process_category_id"
									],
									"variable": [
										{
											"key": "process_category_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Updates the current element"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process_categories/:process_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process_categories",
												":process_category_id"
											],
											"variable": [
												{
													"key": "process_category_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Delete a process category",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process_categories/:process_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process_categories",
										":process_category_id"
									],
									"variable": [
										{
											"key": "process_category_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Remove the specified resource from storage."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process_categories/:process_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process_categories",
												":process_category_id"
											],
											"variable": [
												{
													"key": "process_category_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"process_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"pause_timer_start\": \"<integer>\",\n  \"cancel_screen_id\": \"<integer>\",\n  \"has_timer_start_events\": \"<boolean>\",\n  \"request_detail_screen_id\": \"<integer>\",\n  \"is_valid\": \"<integer>\",\n  \"package_key\": \"<string>\",\n  \"start_events\": [\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"eventDefinitions\": {},\n      \"parallelMultiple\": \"<boolean>\",\n      \"outgoing\": {},\n      \"incoming\": {},\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"warnings\": \"<string>\",\n  \"self_service_tasks\": {},\n  \"category\": {},\n  \"manager_id\": \"<integer>\",\n  \"user_id\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"deleted_at\": \"<dateTime>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"notifications\": {},\n  \"task_notifications\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns all processes categories that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/process_categories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"process_categories"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name and Status. All fields must match exactly."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Display a listing of the Process Categories."
					},
					"response": [
						{
							"name": "list of processes categories",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process_categories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process_categories"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name and Status. All fields must match exactly."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"status\": \"INACTIVE\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"status\": \"INACTIVE\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {}\n}"
						}
					]
				},
				{
					"name": "Save a new process Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/process_categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"process_categories"
							]
						},
						"description": "Store a newly created Process Category in storage"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process_categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process_categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "permissions",
			"item": [
				{
					"name": "Update the permissions of a user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\",\n  \"group_id\": \"<integer>\",\n  \"is_administrator\": false,\n  \"permission_names\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions"
							]
						},
						"description": "Update permissions"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\",\n  \"group_id\": \"<integer>\",\n  \"is_administrator\": false,\n  \"permission_names\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "notifications",
			"item": [
				{
					"name": "{notification_id}",
					"item": [
						{
							"name": "Get single notification by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications/:notification_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":notification_id"
									],
									"variable": [
										{
											"key": "notification_id",
											"value": "<string>"
										}
									]
								},
								"description": "Display the specified resource."
							},
							"response": [
								{
									"name": "Successfully found the notification",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notifications/:notification_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":notification_id"
											],
											"variable": [
												{
													"key": "notification_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"notifiable_type\": \"<string>\",\n  \"notifiable_id\": \"<integer>\",\n  \"data\": \"<string>\",\n  \"name\": \"<string>\",\n  \"message\": \"<string>\",\n  \"processName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"url\": \"<string>\",\n  \"id\": \"<string>\",\n  \"read_at\": \"<dateTime>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update a notification",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"<string>\",\n  \"notifiable_type\": \"<string>\",\n  \"notifiable_id\": \"<integer>\",\n  \"data\": \"<string>\",\n  \"name\": \"<string>\",\n  \"message\": \"<string>\",\n  \"processName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"url\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/:notification_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":notification_id"
									],
									"variable": [
										{
											"key": "notification_id",
											"value": "<string>"
										}
									]
								},
								"description": "Update a user"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"<string>\",\n  \"notifiable_type\": \"<string>\",\n  \"notifiable_id\": \"<integer>\",\n  \"data\": \"<string>\",\n  \"name\": \"<string>\",\n  \"message\": \"<string>\",\n  \"processName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/notifications/:notification_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":notification_id"
											],
											"variable": [
												{
													"key": "notification_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a notification",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/:notification_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":notification_id"
									],
									"variable": [
										{
											"key": "notification_id",
											"value": "<string>"
										}
									]
								},
								"description": "Delete a notification"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notifications/:notification_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":notification_id"
											],
											"variable": [
												{
													"key": "notification_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns all notifications that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notifications?status=<string>&filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "status",
									"value": "<string>",
									"description": "Only return notifications by status (unread, all, etc.)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Display a listing of the resource."
					},
					"response": [
						{
							"name": "list of notifications",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?status=<string>&filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "status",
											"value": "<string>",
											"description": "Only return notifications by status (unread, all, etc.)"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"type\": \"<string>\",\n      \"notifiable_type\": \"<string>\",\n      \"notifiable_id\": \"<integer>\",\n      \"data\": \"<string>\",\n      \"name\": \"<string>\",\n      \"message\": \"<string>\",\n      \"processName\": \"<string>\",\n      \"userName\": \"<string>\",\n      \"request_id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"id\": \"<string>\",\n      \"read_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"notifiable_type\": \"<string>\",\n      \"notifiable_id\": \"<integer>\",\n      \"data\": \"<string>\",\n      \"name\": \"<string>\",\n      \"message\": \"<string>\",\n      \"processName\": \"<string>\",\n      \"userName\": \"<string>\",\n      \"request_id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"id\": \"<string>\",\n      \"read_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {}\n}"
						}
					]
				},
				{
					"name": "Save a new notifications",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"<string>\",\n  \"notifiable_type\": \"<string>\",\n  \"notifiable_id\": \"<integer>\",\n  \"data\": \"<string>\",\n  \"name\": \"<string>\",\n  \"message\": \"<string>\",\n  \"processName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"url\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							]
						},
						"description": "Store a newly created resource in storage."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"<string>\",\n  \"notifiable_type\": \"<string>\",\n  \"notifiable_id\": \"<integer>\",\n  \"data\": \"<string>\",\n  \"name\": \"<string>\",\n  \"message\": \"<string>\",\n  \"processName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"url\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"notifiable_type\": \"<string>\",\n  \"notifiable_id\": \"<integer>\",\n  \"data\": \"<string>\",\n  \"name\": \"<string>\",\n  \"message\": \"<string>\",\n  \"processName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"url\": \"<string>\",\n  \"id\": \"<string>\",\n  \"read_at\": \"<dateTime>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "groups",
			"item": [
				{
					"name": "{group_id}",
					"item": [
						{
							"name": "users",
							"item": [
								{
									"name": "Returns all users of a group",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/users?filter=<string>&order_direction=asc&per_page=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"users"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
												},
												{
													"key": "order_direction",
													"value": "asc"
												},
												{
													"key": "per_page",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Display the list of users in a group"
									},
									"response": [
										{
											"name": "list of members of a group",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/users?filter=<string>&order_direction=asc&per_page=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"users"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>",
															"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
														},
														{
															"key": "order_direction",
															"value": "asc"
														},
														{
															"key": "per_page",
															"value": "10"
														}
													],
													"variable": [
														{
															"key": "group_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"email\": \"<email>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"username\": \"<string>\",\n      \"password\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"postal\": \"<string>\",\n      \"country\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"fax\": \"<string>\",\n      \"cell\": \"<string>\",\n      \"title\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"datetime_format\": \"<string>\",\n      \"language\": \"<string>\",\n      \"is_administrator\": \"<boolean>\",\n      \"expires_at\": \"<string>\",\n      \"loggedin_at\": \"<string>\",\n      \"remember_token\": \"<string>\",\n      \"status\": \"SCHEDULED\",\n      \"fullname\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"media\": [\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        }\n      ],\n      \"birthdate\": \"<date>\",\n      \"delegation_user_id\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"meta\": {\n        \"anim_e\": \"qui amet ex quis in\",\n        \"ut_9a\": -30312988.00221096,\n        \"do_c\": true\n      },\n      \"force_change_password\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"username\": \"<string>\",\n      \"password\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"postal\": \"<string>\",\n      \"country\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"fax\": \"<string>\",\n      \"cell\": \"<string>\",\n      \"title\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"datetime_format\": \"<string>\",\n      \"language\": \"<string>\",\n      \"is_administrator\": \"<boolean>\",\n      \"expires_at\": \"<string>\",\n      \"loggedin_at\": \"<string>\",\n      \"remember_token\": \"<string>\",\n      \"status\": \"OUT_OF_OFFICE\",\n      \"fullname\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"media\": [\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"model_id\": \"<integer>\",\n          \"model_type\": \"<string>\",\n          \"collection_name\": \"<string>\",\n          \"name\": \"<string>\",\n          \"file_name\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"disk\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"manipulations\": {},\n          \"custom_properties\": {},\n          \"responsive_images\": {},\n          \"order_column\": \"<integer>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        }\n      ],\n      \"birthdate\": \"<date>\",\n      \"delegation_user_id\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"meta\": {\n        \"adipisicing_319\": 78923715\n      },\n      \"force_change_password\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "groups",
							"item": [
								{
									"name": "Returns all users of a group",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/groups?filter=<string>&order_direction=asc&per_page=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"groups"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
												},
												{
													"key": "order_direction",
													"value": "asc"
												},
												{
													"key": "per_page",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Display the list of groups in a group"
									},
									"response": [
										{
											"name": "list of members of a group",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/groups?filter=<string>&order_direction=asc&per_page=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"groups"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>",
															"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
														},
														{
															"key": "order_direction",
															"value": "asc"
														},
														{
															"key": "per_page",
															"value": "10"
														}
													],
													"variable": [
														{
															"key": "group_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"manager_id\": \"<integer>\",\n      \"status\": \"ACTIVE\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"manager_id\": \"<integer>\",\n      \"status\": \"INACTIVE\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get single group by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Display the specified resource."
							},
							"response": [
								{
									"name": "Successfully found the group",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"status\": \"INACTIVE\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"id\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a group",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"status\": \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update a user"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"status\": \"ACTIVE\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"status\": \"ACTIVE\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete a group",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Delete a user"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns all groups that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups?status=ACTIVE&filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							],
							"query": [
								{
									"key": "status",
									"value": "ACTIVE",
									"description": "ACTIVE or INACTIVE"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Display a listing of the resource."
					},
					"response": [
						{
							"name": "list of groups",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups?status=ACTIVE&filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "status",
											"value": "ACTIVE",
											"description": "ACTIVE or INACTIVE"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"manager_id\": \"<integer>\",\n      \"status\": \"ACTIVE\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"manager_id\": \"<integer>\",\n      \"status\": \"INACTIVE\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"status\": \"ACTIVE\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						},
						"description": "Store a newly created resource in storage."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"status\": \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"status\": \"INACTIVE\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"id\": \"<string>\"\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"status\": \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "group_members_available",
			"item": [
				{
					"name": "Returns all groups available for a given member",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/group_members_available?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group_members_available"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							],
							"variable": [
								{
									"key": "member_id",
									"value": "<string>",
									"description": "(Required) ID of group member to return"
								},
								{
									"key": "member_type",
									"value": "<string>",
									"description": "(Required) type of group member to return"
								}
							]
						},
						"description": "Display a listing of groups available"
					},
					"response": [
						{
							"name": "list of groups available to be assigned as member",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group_members_available?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group_members_available"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "group_members",
			"item": [
				{
					"name": "{group_member_id}",
					"item": [
						{
							"name": "Get single group member by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group_members/:group_member_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group_members",
										":group_member_id"
									],
									"variable": [
										{
											"key": "group_member_id",
											"value": "<string>"
										}
									]
								},
								"description": "Display the specified resource."
							},
							"response": [
								{
									"name": "Successfully found the group members",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/group_members/:group_member_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group_members",
												":group_member_id"
											],
											"variable": [
												{
													"key": "group_member_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"group_id\": \"<string>\",\n  \"member_id\": \"<string>\",\n  \"member_type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Delete a group member",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/group_members/:group_member_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group_members",
										":group_member_id"
									],
									"variable": [
										{
											"key": "group_member_id",
											"value": "<string>"
										}
									]
								},
								"description": "Delete a group membership"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/group_members/:group_member_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group_members",
												":group_member_id"
											],
											"variable": [
												{
													"key": "group_member_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns all groups for a given member",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/group_members?member_id=<integer>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group_members"
							],
							"query": [
								{
									"key": "member_id",
									"value": "<integer>"
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Display a listing of the resource."
					},
					"response": [
						{
							"name": "list of group_members",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group_members?member_id=<integer>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group_members"
									],
									"query": [
										{
											"key": "member_id",
											"value": "<integer>"
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"group_id\": \"<string>\",\n      \"member_id\": \"<string>\",\n      \"member_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"group_id\": \"<string>\",\n      \"member_id\": \"<string>\",\n      \"member_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new group member",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"group_id\": \"<string>\",\n  \"member_id\": \"<string>\",\n  \"member_type\": \"<string>\",\n  \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/group_members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group_members"
							]
						},
						"description": "Store a newly created resource in storage."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"group_id\": \"<string>\",\n  \"member_id\": \"<string>\",\n  \"member_type\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group_members",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group_members"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"group_id\": \"<string>\",\n  \"member_id\": \"<string>\",\n  \"member_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<string>\",\n  \"group\": {},\n  \"member\": {},\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "files",
			"item": [
				{
					"name": "{file_id}",
					"item": [
						{
							"name": "contents",
							"item": [
								{
									"name": "Get the contents of a file",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/files/:file_id/contents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"files",
												":file_id",
												"contents"
											],
											"variable": [
												{
													"key": "file_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Display the specified resource."
									},
									"response": [
										{
											"name": "File stream",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/files/:file_id/contents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"files",
														":file_id",
														"contents"
													],
													"variable": [
														{
															"key": "file_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/files/:file_id/contents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"files",
														":file_id",
														"contents"
													],
													"variable": [
														{
															"key": "file_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get the metadata of a file. To actually fetch the file see Get File Contents",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/:file_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										":file_id"
									],
									"variable": [
										{
											"key": "file_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Get a single media file."
							},
							"response": [
								{
									"name": "Successfully found the file",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/files/:file_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"files",
												":file_id"
											],
											"variable": [
												{
													"key": "file_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"model_id\": \"<integer>\",\n  \"model_type\": \"<string>\",\n  \"collection_name\": \"<string>\",\n  \"name\": \"<string>\",\n  \"file_name\": \"<string>\",\n  \"mime_type\": \"<string>\",\n  \"disk\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"manipulations\": {},\n  \"custom_properties\": {},\n  \"responsive_images\": {},\n  \"order_column\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/files/:file_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"files",
												":file_id"
											],
											"variable": [
												{
													"key": "file_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete a media file",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/:file_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										":file_id"
									],
									"variable": [
										{
											"key": "file_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Remove the specified resource from storage."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/files/:file_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"files",
												":file_id"
											],
											"variable": [
												{
													"key": "file_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/files/:file_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"files",
												":file_id"
											],
											"variable": [
												{
													"key": "file_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns the list of files",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Display a listing of the resource."
					},
					"response": [
						{
							"name": "list of files",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"model_id\": \"<integer>\",\n      \"model_type\": \"<string>\",\n      \"collection_name\": \"<string>\",\n      \"name\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"disk\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"manipulations\": {},\n      \"custom_properties\": {},\n      \"responsive_images\": {},\n      \"order_column\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new media file. Note: To upload files to a request, use createRequestFile in the RequestFile API",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "<string>",
									"description": "save a new media file",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files?model_id=<integer>&model=<string>&data_name=<string>&collection=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files"
							],
							"query": [
								{
									"key": "model_id",
									"value": "<integer>",
									"description": "(Required) ID of the model to which the file will be associated"
								},
								{
									"key": "model",
									"value": "<string>",
									"description": "(Required) Full namespaced class of the model to associate"
								},
								{
									"key": "data_name",
									"value": "<string>",
									"description": "Name of the variable used in a request"
								},
								{
									"key": "collection",
									"value": "<string>",
									"description": "Media collection name. For requests, use 'default'"
								}
							]
						},
						"description": "Store a newly created resource in storage."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<string>",
											"description": "save a new media file",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files?model_id=<integer>&model=<string>&data_name=<string>&collection=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "model_id",
											"value": "<integer>",
											"description": "(Required) ID of the model to which the file will be associated"
										},
										{
											"key": "model",
											"value": "<string>",
											"description": "(Required) Full namespaced class of the model to associate"
										},
										{
											"key": "data_name",
											"value": "<string>",
											"description": "Name of the variable used in a request"
										},
										{
											"key": "collection",
											"value": "<string>",
											"description": "Media collection name. For requests, use 'default'"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"model_id\": \"<string>\",\n  \"file_name\": \"<string>\",\n  \"mime_type\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "environment_variables",
			"item": [
				{
					"name": "{environment_variable_id}",
					"item": [
						{
							"name": "Get an environment variable by id. For security, the value is not included.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environment_variables/:environment_variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environment_variables",
										":environment_variable_id"
									],
									"variable": [
										{
											"key": "environment_variable_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Return an environment variable instance\nUsing implicit model binding, will automatically return 404 if variable now found"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/environment_variables/:environment_variable_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environment_variables",
												":environment_variable_id"
											],
											"variable": [
												{
													"key": "environment_variable_id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update an environment variable",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environment_variables/:environment_variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environment_variables",
										":environment_variable_id"
									],
									"variable": [
										{
											"key": "environment_variable_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update an environment variable"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/environment_variables/:environment_variable_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environment_variables",
												":environment_variable_id"
											],
											"variable": [
												{
													"key": "environment_variable_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Delete an environment variable",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/environment_variables/:environment_variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environment_variables",
										":environment_variable_id"
									],
									"variable": [
										{
											"key": "environment_variable_id",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/environment_variables/:environment_variable_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environment_variables",
												":environment_variable_id"
											],
											"variable": [
												{
													"key": "environment_variable_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns all environmentVariables that the user has access to. For security, values are not included.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/environment_variables?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environment_variables"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Fetch a collection of variables based on paged request and filter if provided"
					},
					"response": [
						{
							"name": "list of environmentVariables",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environment_variables?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environment_variables"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {}\n}"
						}
					]
				},
				{
					"name": "Create a new environment variable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/environment_variables",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environment_variables"
							]
						},
						"description": "Creates a new global Environment Variable in the system"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environment_variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environment_variables"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "decision_tables",
			"item": [
				{
					"name": "{decision_table_id}",
					"item": [
						{
							"name": "export",
							"item": [
								{
									"name": "Export a single Decision Table by ID",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision_tables/:decision_table_id/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision_tables",
												":decision_table_id",
												"export"
											],
											"variable": [
												{
													"key": "decision_table_id",
													"value": "<string>"
												}
											]
										},
										"description": "Export the specified screen."
									},
									"response": [
										{
											"name": "Successfully exported the decision table",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision_tables/:decision_table_id/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision_tables",
														":decision_table_id",
														"export"
													],
													"variable": [
														{
															"key": "decision_table_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"url\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "excel-import",
							"item": [
								{
									"name": "Import a new decision table",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "file to import",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/decision_tables/:decision_table_id/excel-import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision_tables",
												":decision_table_id",
												"excel-import"
											],
											"variable": [
												{
													"key": "decision_table_id",
													"value": "<string>"
												}
											]
										},
										"description": "Import a Decision table from excel"
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<string>",
															"description": "file to import",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/decision_tables/:decision_table_id/excel-import",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision_tables",
														":decision_table_id",
														"excel-import"
													],
													"variable": [
														{
															"key": "decision_table_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": {}\n}"
										}
									]
								}
							]
						},
						{
							"name": "duplicate",
							"item": [
								{
									"name": "duplicate a Decision Table",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": \"<string>\",\n  \"decision_table_categories_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/decision_tables/:decision_table_id/duplicate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision_tables",
												":decision_table_id",
												"duplicate"
											],
											"variable": [
												{
													"key": "decision_table_id",
													"value": "<string>"
												}
											]
										},
										"description": "duplicate a Decision table."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": \"<string>\",\n  \"decision_table_categories_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/decision_tables/:decision_table_id/duplicate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision_tables",
														":decision_table_id",
														"duplicate"
													],
													"variable": [
														{
															"key": "decision_table_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": \"<string>\",\n  \"decision_table_categories_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get single Decision Table by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision_tables/:decision_table_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision_tables",
										":decision_table_id"
									],
									"variable": [
										{
											"key": "decision_table_id",
											"value": "<string>"
										}
									]
								},
								"description": "Display the specified resource."
							},
							"response": [
								{
									"name": "Successfully found the Decision Table",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision_tables/:decision_table_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision_tables",
												":decision_table_id"
											],
											"variable": [
												{
													"key": "decision_table_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": \"<string>\",\n  \"decision_table_categories_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update a Decision Table",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": \"<string>\",\n  \"decision_table_categories_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/decision_tables/:decision_table_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision_tables",
										":decision_table_id"
									],
									"variable": [
										{
											"key": "decision_table_id",
											"value": "<string>"
										}
									]
								},
								"description": "Update a Decision table"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": \"<string>\",\n  \"decision_table_categories_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/decision_tables/:decision_table_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision_tables",
												":decision_table_id"
											],
											"variable": [
												{
													"key": "decision_table_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": \"<string>\",\n  \"decision_table_categories_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Delete a Decision Table",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision_tables/:decision_table_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision_tables",
										":decision_table_id"
									],
									"variable": [
										{
											"key": "decision_table_id",
											"value": "<string>"
										}
									]
								},
								"description": "Delete a Decision tables"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision_tables/:decision_table_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision_tables",
												":decision_table_id"
											],
											"variable": [
												{
													"key": "decision_table_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": \"<string>\",\n  \"decision_table_categories_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "import",
					"item": [
						{
							"name": "Import a new Decision Table",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<string>",
											"description": "file to import",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/decision_tables/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision_tables",
										"import"
									]
								},
								"description": "Import the specified Decision Table."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "file to import",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/decision_tables/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision_tables",
												"import"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns all Decision tables that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decision_tables?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decision_tables"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Display a listing of the resource."
					},
					"response": [
						{
							"name": "list of Decision Tables",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision_tables?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision_tables"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"definition\": \"<string>\",\n      \"decision_table_categories_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"definition\": \"<string>\",\n      \"decision_table_categories_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new Decision Table",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": \"<string>\",\n  \"decision_table_categories_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decision_tables",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decision_tables"
							]
						},
						"description": "Store a newly created resource in storage."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": \"<string>\",\n  \"decision_table_categories_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/decision_tables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision_tables"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": \"<string>\",\n  \"decision_table_categories_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "decision_table_categories",
			"item": [
				{
					"name": "{decision_table_categories_id}",
					"item": [
						{
							"name": "Get single Decision Table category by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision_table_categories/:decision_table_categories_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision_table_categories",
										":decision_table_categories_id"
									],
									"variable": [
										{
											"key": "decision_table_categories_id",
											"value": "<string>"
										}
									]
								},
								"description": "Display the specified decision Tables category."
							},
							"response": [
								{
									"name": "Successfully found the Decision Table",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision_table_categories/:decision_table_categories_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision_table_categories",
												":decision_table_categories_id"
											],
											"variable": [
												{
													"key": "decision_table_categories_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update a Decision Table Category",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/decision_table_categories/:decision_table_categories_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision_table_categories",
										":decision_table_categories_id"
									],
									"variable": [
										{
											"key": "decision_table_categories_id",
											"value": "<string>"
										}
									]
								},
								"description": "Updates the current element"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/decision_table_categories/:decision_table_categories_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision_table_categories",
												":decision_table_categories_id"
											],
											"variable": [
												{
													"key": "decision_table_categories_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Delete a Decision Table category",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/decision_table_categories/:decision_table_categories_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision_table_categories",
										":decision_table_categories_id"
									],
									"variable": [
										{
											"key": "decision_table_categories_id",
											"value": "<string>"
										}
									]
								},
								"description": "Remove the specified resource from storage."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision_table_categories/:decision_table_categories_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision_table_categories",
												":decision_table_categories_id"
											],
											"variable": [
												{
													"key": "decision_table_categories_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns all Decision Tables categories that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decision_table_categories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decision_table_categories"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Display a listing of the Decision Tables Categories."
					},
					"response": [
						{
							"name": "list of Decision Tables categories",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision_table_categories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision_table_categories"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new Decision Table Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decision_table_categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decision_table_categories"
							]
						},
						"description": "Store a newly created Decision Tables  Category in storage"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/decision_table_categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision_table_categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"INACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "data_sources",
			"item": [
				{
					"name": "data_source_id",
					"item": [
						{
							"name": "test",
							"item": [
								{
									"name": "Send a Data Connector request",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"endpoints\": \"<string>\",\n  \"mappings\": \"<string>\",\n  \"authtype\": \"<string>\",\n  \"credentials\": \"<string>\",\n  \"status\": \"<string>\",\n  \"data_source_category_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/data_sources/data_source_id/test",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data_sources",
												"data_source_id",
												"test"
											],
											"variable": [
												{
													"key": "data_source_id",
													"value": "<string>",
													"description": "(Required) ID of Data Connector to return"
												}
											]
										},
										"description": "Send a Data Connector request."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"endpoints\": \"<string>\",\n  \"mappings\": \"<string>\",\n  \"authtype\": \"<string>\",\n  \"credentials\": \"<string>\",\n  \"status\": \"<string>\",\n  \"data_source_category_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/data_sources/data_source_id/test",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data_sources",
														"data_source_id",
														"test"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"endpoints\": \"<string>\",\n  \"mappings\": \"<string>\",\n  \"authtype\": \"<string>\",\n  \"credentials\": \"<string>\",\n  \"status\": \"<string>\",\n  \"data_source_category_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get single Data Connector by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/data_sources/data_source_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_sources",
										"data_source_id"
									],
									"variable": [
										{
											"key": "data_source_id",
											"value": "<string>",
											"description": "(Required) ID of Data Connector to return"
										}
									]
								},
								"description": "Get a single Data Connector."
							},
							"response": [
								{
									"name": "Successfully found the Data Connector",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/data_sources/data_source_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data_sources",
												"data_source_id"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"endpoints\": \"<string>\",\n  \"mappings\": \"<string>\",\n  \"authtype\": \"<string>\",\n  \"credentials\": \"<string>\",\n  \"status\": \"<string>\",\n  \"data_source_category_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update a Data Connector",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"endpoints\": \"<string>\",\n  \"mappings\": \"<string>\",\n  \"authtype\": \"<string>\",\n  \"credentials\": \"<string>\",\n  \"status\": \"<string>\",\n  \"data_source_category_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data_sources/data_source_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_sources",
										"data_source_id"
									],
									"variable": [
										{
											"key": "data_source_id",
											"value": "<string>",
											"description": "(Required) ID of Data Connector to return"
										}
									]
								},
								"description": "Update a Data Connector."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"endpoints\": \"<string>\",\n  \"mappings\": \"<string>\",\n  \"authtype\": \"<string>\",\n  \"credentials\": \"<string>\",\n  \"status\": \"<string>\",\n  \"data_source_category_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/data_sources/data_source_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data_sources",
												"data_source_id"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"endpoints\": \"<string>\",\n  \"mappings\": \"<string>\",\n  \"authtype\": \"<string>\",\n  \"credentials\": \"<string>\",\n  \"status\": \"<string>\",\n  \"data_source_category_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Delete a Data Connector",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/data_sources/data_source_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_sources",
										"data_source_id"
									],
									"variable": [
										{
											"key": "data_source_id",
											"value": "<string>",
											"description": "(Required) ID of Data Connector to return"
										}
									]
								},
								"description": "Delete a Data Connector."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/data_sources/data_source_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data_sources",
												"data_source_id"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"endpoints\": \"<string>\",\n  \"mappings\": \"<string>\",\n  \"authtype\": \"<string>\",\n  \"credentials\": \"<string>\",\n  \"status\": \"<string>\",\n  \"data_source_category_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns all Data Connectors that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/data_sources?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data_sources"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Get the list of records of a Data Connector"
					},
					"response": [
						{
							"name": "list of Data Connectors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/data_sources?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_sources"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"endpoints\": \"<string>\",\n      \"mappings\": \"<string>\",\n      \"authtype\": \"<string>\",\n      \"credentials\": \"<string>\",\n      \"status\": \"<string>\",\n      \"data_source_category_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"endpoints\": \"<string>\",\n      \"mappings\": \"<string>\",\n      \"authtype\": \"<string>\",\n      \"credentials\": \"<string>\",\n      \"status\": \"<string>\",\n      \"data_source_category_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new Data Connector",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"endpoints\": \"<string>\",\n  \"mappings\": \"<string>\",\n  \"authtype\": \"<string>\",\n  \"credentials\": \"<string>\",\n  \"status\": \"<string>\",\n  \"data_source_category_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data_sources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data_sources"
							]
						},
						"description": "Create a new Data Connector."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"endpoints\": \"<string>\",\n  \"mappings\": \"<string>\",\n  \"authtype\": \"<string>\",\n  \"credentials\": \"<string>\",\n  \"status\": \"<string>\",\n  \"data_source_category_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data_sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_sources"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"endpoints\": \"<string>\",\n  \"mappings\": \"<string>\",\n  \"authtype\": \"<string>\",\n  \"credentials\": \"<string>\",\n  \"status\": \"<string>\",\n  \"data_source_category_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "data_source_categories",
			"item": [
				{
					"name": "{data_source_category_id}",
					"item": [
						{
							"name": "Get single Data Connector category by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/data_source_categories/:data_source_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_source_categories",
										":data_source_category_id"
									],
									"variable": [
										{
											"key": "data_source_category_id",
											"value": "<string>"
										}
									]
								},
								"description": "Display the specified data Source category."
							},
							"response": [
								{
									"name": "Successfully found the Data Connector",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/data_source_categories/:data_source_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data_source_categories",
												":data_source_category_id"
											],
											"variable": [
												{
													"key": "data_source_category_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Update a Data Connector Category",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data_source_categories/:data_source_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_source_categories",
										":data_source_category_id"
									],
									"variable": [
										{
											"key": "data_source_category_id",
											"value": "<string>"
										}
									]
								},
								"description": "Updates the current element"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/data_source_categories/:data_source_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data_source_categories",
												":data_source_category_id"
											],
											"variable": [
												{
													"key": "data_source_category_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Delete a Data Connector category",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data_source_categories/:data_source_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_source_categories",
										":data_source_category_id"
									],
									"variable": [
										{
											"key": "data_source_category_id",
											"value": "<string>"
										}
									]
								},
								"description": "Remove the specified resource from storage."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/data_source_categories/:data_source_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data_source_categories",
												":data_source_category_id"
											],
											"variable": [
												{
													"key": "data_source_category_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns all Data Connectors categories that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/data_source_categories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data_source_categories"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Display a listing of the Data Connector Categories."
					},
					"response": [
						{
							"name": "list of Data Connectors categories",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/data_source_categories?filter=<string>&order_by=<string>&order_direction=asc&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_source_categories"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"status\": \"INACTIVE\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"status\": \"INACTIVE\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new Data Connector Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data_source_categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data_source_categories"
							]
						},
						"description": "Store a newly created Data Connector Category in storage"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data_source_categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_source_categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "customize-ui",
			"item": [
				{
					"name": "Create or update a new setting",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"variables\": \"<string>\",\n  \"sansSerifFont\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/customize-ui",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customize-ui"
							]
						},
						"description": "Create a new Settings css-override"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"variables\": \"<string>\",\n  \"sansSerifFont\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customize-ui",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customize-ui"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"key\": \"<string>\",\n  \"name\": \"<string>\",\n  \"helper\": \"<string>\",\n  \"group\": \"<string>\",\n  \"format\": \"<string>\",\n  \"hidden\": \"<boolean>\",\n  \"readonly\": \"<boolean>\",\n  \"variables\": \"<string>\",\n  \"sansSerifFont\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "comments",
			"item": [
				{
					"name": "tasks",
					"item": [
						{
							"name": "Returns all the tasks that are active.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comments/tasks?process_request_id=<integer>&filter=<string>&order_by=<string>&order_direction=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comments",
										"tasks"
									],
									"query": [
										{
											"key": "process_request_id",
											"value": "<integer>",
											"description": "Process request id"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										}
									]
								},
								"description": "Display a listing of the resource."
							},
							"response": [
								{
									"name": "list all tasks taht are active",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/comments/tasks?process_request_id=<integer>&filter=<string>&order_by=<string>&order_direction=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"comments",
												"tasks"
											],
											"query": [
												{
													"key": "process_request_id",
													"value": "<integer>",
													"description": "Process request id"
												},
												{
													"key": "filter",
													"value": "<string>",
													"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
												},
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Field to order results by"
												},
												{
													"key": "order_direction",
													"value": "asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"initiated_at\": \"<dateTime>\",\n      \"riskchanges_at\": \"<dateTime>\",\n      \"subprocess_start_event_id\": \"<string>\",\n      \"data\": {},\n      \"id\": \"<string>\",\n      \"process_id\": \"<string>\",\n      \"process_request_id\": \"<string>\",\n      \"element_id\": \"<string>\",\n      \"element_type\": \"<string>\",\n      \"element_index\": \"<string>\",\n      \"element_name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"advanceStatus\": \"<string>\",\n      \"due_notified\": \"<integer>\",\n      \"user\": {},\n      \"process\": {},\n      \"process_request\": {}\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"initiated_at\": \"<dateTime>\",\n      \"riskchanges_at\": \"<dateTime>\",\n      \"subprocess_start_event_id\": \"<string>\",\n      \"data\": {},\n      \"id\": \"<string>\",\n      \"process_id\": \"<string>\",\n      \"process_request_id\": \"<string>\",\n      \"element_id\": \"<string>\",\n      \"element_type\": \"<string>\",\n      \"element_index\": \"<string>\",\n      \"element_name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"advanceStatus\": \"<string>\",\n      \"due_notified\": \"<integer>\",\n      \"user\": {},\n      \"process\": {},\n      \"process_request\": {}\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "collections",
			"item": [
				{
					"name": "{collection_id}",
					"item": [
						{
							"name": "truncate",
							"item": [
								{
									"name": "Deletes all records in a collection",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_id/truncate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_id",
												"truncate"
											],
											"variable": [
												{
													"key": "collection_id",
													"value": "<string>"
												}
											]
										},
										"description": "Truncate a Collection."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/collections/:collection_id/truncate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														":collection_id",
														"truncate"
													],
													"variable": [
														{
															"key": "collection_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "records",
							"item": [
								{
									"name": "{record_id}",
									"item": [
										{
											"name": "Get single record of a collection",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/collections/:collection_id/records/:record_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														":collection_id",
														"records",
														":record_id"
													],
													"variable": [
														{
															"key": "collection_id",
															"value": "<string>"
														},
														{
															"key": "record_id",
															"value": "<string>"
														}
													]
												},
												"description": "Get a single record of a Collection."
											},
											"response": [
												{
													"name": "Successfully found the record",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/collections/:collection_id/records/:record_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"collections",
																":collection_id",
																"records",
																":record_id"
															],
															"variable": [
																{
																	"key": "collection_id"
																},
																{
																	"key": "record_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": {},\n  \"id\": \"<integer>\",\n  \"collection_id\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Update a record",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/collections/:collection_id/records/:record_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														":collection_id",
														"records",
														":record_id"
													],
													"variable": [
														{
															"key": "collection_id",
															"value": "<string>"
														},
														{
															"key": "record_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update a record in a Collection."
											},
											"response": [
												{
													"name": "success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"data\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/collections/:collection_id/records/:record_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"collections",
																":collection_id",
																"records",
																":record_id"
															],
															"variable": [
																{
																	"key": "collection_id"
																},
																{
																	"key": "record_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a collection record",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/collections/:collection_id/records/:record_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														":collection_id",
														"records",
														":record_id"
													],
													"variable": [
														{
															"key": "collection_id",
															"value": "<string>"
														},
														{
															"key": "record_id",
															"value": "<string>"
														}
													]
												},
												"description": "Delete a record of a Collection."
											},
											"response": [
												{
													"name": "success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/collections/:collection_id/records/:record_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"collections",
																":collection_id",
																"records",
																":record_id"
															],
															"variable": [
																{
																	"key": "collection_id"
																},
																{
																	"key": "record_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Partial update of a record",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_title\": \"<string>\",\n  \"create_screen_id\": \"<string>\",\n  \"read_screen_id\": \"<string>\",\n  \"update_screen_id\": \"<string>\",\n  \"signal_create\": \"<boolean>\",\n  \"signal_update\": \"<boolean>\",\n  \"signal_delete\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/collections/:collection_id/records/:record_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														":collection_id",
														"records",
														":record_id"
													],
													"variable": [
														{
															"key": "collection_id",
															"value": "<string>"
														},
														{
															"key": "record_id",
															"value": "<string>"
														}
													]
												},
												"description": "Implements a partial update of a record in a Collection."
											},
											"response": [
												{
													"name": "success",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_title\": \"<string>\",\n  \"create_screen_id\": \"<string>\",\n  \"read_screen_id\": \"<string>\",\n  \"update_screen_id\": \"<string>\",\n  \"signal_create\": \"<boolean>\",\n  \"signal_update\": \"<boolean>\",\n  \"signal_delete\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/collections/:collection_id/records/:record_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"collections",
																":collection_id",
																"records",
																":record_id"
															],
															"variable": [
																{
																	"key": "collection_id"
																},
																{
																	"key": "record_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Returns all records",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_id/records?pmql=<string>&per_page=10&filter=<string>&order_by=<string>&order_direction=asc&include=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_id",
												"records"
											],
											"query": [
												{
													"key": "pmql",
													"value": "<string>"
												},
												{
													"key": "per_page",
													"value": "10"
												},
												{
													"key": "filter",
													"value": "<string>",
													"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
												},
												{
													"key": "order_by",
													"value": "<string>",
													"description": "Field to order results by"
												},
												{
													"key": "order_direction",
													"value": "asc"
												},
												{
													"key": "include",
													"value": "",
													"description": "Include data from related models in payload. Comma separated list."
												}
											],
											"variable": [
												{
													"key": "collection_id",
													"value": "<string>"
												}
											]
										},
										"description": "Get the list of records of a collection."
									},
									"response": [
										{
											"name": "list of records of a collection",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/collections/:collection_id/records?pmql=<string>&per_page=10&filter=<string>&order_by=<string>&order_direction=asc&include=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														":collection_id",
														"records"
													],
													"query": [
														{
															"key": "pmql",
															"value": "<string>"
														},
														{
															"key": "per_page",
															"value": "10"
														},
														{
															"key": "filter",
															"value": "<string>",
															"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
														},
														{
															"key": "order_by",
															"value": "<string>",
															"description": "Field to order results by"
														},
														{
															"key": "order_direction",
															"value": "asc"
														},
														{
															"key": "include",
															"value": "",
															"description": "Include data from related models in payload. Comma separated list."
														}
													],
													"variable": [
														{
															"key": "collection_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"data\": {},\n      \"id\": \"<integer>\",\n      \"collection_id\": \"<string>\"\n    },\n    {\n      \"data\": {},\n      \"id\": \"<integer>\",\n      \"collection_id\": \"<string>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"asc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Save a new record in a collection",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_id/records",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_id",
												"records"
											],
											"variable": [
												{
													"key": "collection_id",
													"value": "<string>"
												}
											]
										},
										"description": "Create a new record in a Collection."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/collections/:collection_id/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														":collection_id",
														"records"
													],
													"variable": [
														{
															"key": "collection_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {},\n  \"id\": \"<integer>\",\n  \"collection_id\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "export",
							"item": [
								{
									"name": "Trigger export collections job",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_id/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_id",
												"export"
											],
											"variable": [
												{
													"key": "collection_id",
													"value": "<string>"
												}
											]
										},
										"description": "Export the specified collection."
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/collections/:collection_id/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														":collection_id",
														"export"
													],
													"variable": [
														{
															"key": "collection_id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get single collections by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collections/:collection_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										":collection_id"
									],
									"variable": [
										{
											"key": "collection_id",
											"value": "<string>"
										}
									]
								},
								"description": "Get a single Collection."
							},
							"response": [
								{
									"name": "Successfully found the collections",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_id"
											],
											"variable": [
												{
													"key": "collection_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_title\": \"<string>\",\n  \"create_screen_id\": \"<string>\",\n  \"read_screen_id\": \"<string>\",\n  \"update_screen_id\": \"<string>\",\n  \"signal_create\": \"<boolean>\",\n  \"signal_update\": \"<boolean>\",\n  \"signal_delete\": \"<boolean>\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"created_by_id\": \"<string>\",\n  \"updated_by_id\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a collection",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_title\": \"<string>\",\n  \"create_screen_id\": \"<string>\",\n  \"read_screen_id\": \"<string>\",\n  \"update_screen_id\": \"<string>\",\n  \"signal_create\": \"<boolean>\",\n  \"signal_update\": \"<boolean>\",\n  \"signal_delete\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections/:collection_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										":collection_id"
									],
									"variable": [
										{
											"key": "collection_id",
											"value": "<string>"
										}
									]
								},
								"description": "Update a Collection."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_title\": \"<string>\",\n  \"create_screen_id\": \"<string>\",\n  \"read_screen_id\": \"<string>\",\n  \"update_screen_id\": \"<string>\",\n  \"signal_create\": \"<boolean>\",\n  \"signal_update\": \"<boolean>\",\n  \"signal_delete\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_id"
											],
											"variable": [
												{
													"key": "collection_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a collection",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections/:collection_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										":collection_id"
									],
									"variable": [
										{
											"key": "collection_id",
											"value": "<string>"
										}
									]
								},
								"description": "Delete a Collection."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_id"
											],
											"variable": [
												{
													"key": "collection_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "import",
					"item": [
						{
							"name": "Import a new collection",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<file>",
											"description": "(Required) file to upload",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/collections/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"import"
									]
								},
								"description": "Import the specified collection."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<file>",
													"description": "(Required) file to upload",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/collections/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"import"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<file>",
													"description": "(Required) file to upload",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/collections/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"import"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_title\": \"<string>\",\n  \"create_screen_id\": \"<string>\",\n  \"read_screen_id\": \"<string>\",\n  \"update_screen_id\": \"<string>\",\n  \"signal_create\": \"<boolean>\",\n  \"signal_update\": \"<boolean>\",\n  \"signal_delete\": \"<boolean>\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"created_by_id\": \"<string>\",\n  \"updated_by_id\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns all collections that the user has access to",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/collections?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Field to order results by"
								},
								{
									"key": "order_direction",
									"value": "asc"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "include",
									"value": "",
									"description": "Include data from related models in payload. Comma separated list."
								}
							]
						},
						"description": "Get a list of Collections."
					},
					"response": [
						{
							"name": "list of collections",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collections?filter=<string>&order_by=<string>&order_direction=asc&per_page=10&include=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Field to order results by"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "include",
											"value": "",
											"description": "Include data from related models in payload. Comma separated list."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"custom_title\": \"<string>\",\n      \"create_screen_id\": \"<string>\",\n      \"read_screen_id\": \"<string>\",\n      \"update_screen_id\": \"<string>\",\n      \"signal_create\": \"<boolean>\",\n      \"signal_update\": \"<boolean>\",\n      \"signal_delete\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"created_by_id\": \"<string>\",\n      \"updated_by_id\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"custom_title\": \"<string>\",\n      \"create_screen_id\": \"<string>\",\n      \"read_screen_id\": \"<string>\",\n      \"update_screen_id\": \"<string>\",\n      \"signal_create\": \"<boolean>\",\n      \"signal_update\": \"<boolean>\",\n      \"signal_delete\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\",\n      \"created_by_id\": \"<string>\",\n      \"updated_by_id\": \"<string>\"\n    }\n  ],\n  \"meta\": {\n    \"filter\": \"<string>\",\n    \"sort_by\": \"<string>\",\n    \"sort_order\": \"desc\",\n    \"count\": \"<integer>\",\n    \"total_pages\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"form\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Save a new collections",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_title\": \"<string>\",\n  \"create_screen_id\": \"<string>\",\n  \"read_screen_id\": \"<string>\",\n  \"update_screen_id\": \"<string>\",\n  \"signal_create\": \"<boolean>\",\n  \"signal_update\": \"<boolean>\",\n  \"signal_delete\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/collections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections"
							]
						},
						"description": "Create a new Collection."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_title\": \"<string>\",\n  \"create_screen_id\": \"<string>\",\n  \"read_screen_id\": \"<string>\",\n  \"update_screen_id\": \"<string>\",\n  \"signal_create\": \"<boolean>\",\n  \"signal_update\": \"<boolean>\",\n  \"signal_delete\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom_title\": \"<string>\",\n  \"create_screen_id\": \"<string>\",\n  \"read_screen_id\": \"<string>\",\n  \"update_screen_id\": \"<string>\",\n  \"signal_create\": \"<boolean>\",\n  \"signal_update\": \"<boolean>\",\n  \"signal_delete\": \"<boolean>\",\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"created_by_id\": \"<string>\",\n  \"updated_by_id\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "redirect_uri",
				"value": "http://playground.innovations.processmaker.io/token/refresh",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "http://playground.innovations.processmaker.io/oauth/token",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "http://playground.innovations.processmaker.io/oauth/authorize",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "/api/1.0"
		}
	]
}